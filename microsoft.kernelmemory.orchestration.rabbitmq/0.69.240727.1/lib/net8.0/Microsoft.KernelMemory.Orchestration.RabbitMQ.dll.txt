[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddRabbitMQOrchestration(IServiceCollection services, RabbitMqConfig config);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static IQueue <AddRabbitMQOrchestration>g__QueueFactory|0_0(IServiceProvider serviceProvider);
}
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IKernelMemoryBuilder WithRabbitMQOrchestration(IKernelMemoryBuilder builder, RabbitMqConfig config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExperimentalAttribute("KMEXP04")]
public class Microsoft.KernelMemory.Orchestration.RabbitMQ.RabbitMQPipeline : object {
    private ILogger`1<RabbitMQPipeline> _log;
    private IConnection _connection;
    private IModel _channel;
    private AsyncEventingBasicConsumer _consumer;
    private string _queueName;
    private int _messageTTLMsecs;
    public RabbitMQPipeline(RabbitMqConfig config, ILoggerFactory loggerFactory);
    public sealed virtual Task`1<IQueue> ConnectToQueueAsync(string queueName, QueueOptions options, CancellationToken cancellationToken);
    public sealed virtual Task EnqueueAsync(string message, CancellationToken cancellationToken);
    public sealed virtual void OnDequeue(Func`2<string, Task`1<bool>> processMessageAction);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.RabbitMqConfig : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualHost>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MessageTTLSecs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SslEnabled>k__BackingField;
    public string Host { get; public set; }
    public int Port { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public string VirtualHost { get; public set; }
    public int MessageTTLSecs { get; public set; }
    public bool SslEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_VirtualHost();
    [CompilerGeneratedAttribute]
public void set_VirtualHost(string value);
    [CompilerGeneratedAttribute]
public int get_MessageTTLSecs();
    [CompilerGeneratedAttribute]
public void set_MessageTTLSecs(int value);
    [CompilerGeneratedAttribute]
public bool get_SslEnabled();
    [CompilerGeneratedAttribute]
public void set_SslEnabled(bool value);
}
