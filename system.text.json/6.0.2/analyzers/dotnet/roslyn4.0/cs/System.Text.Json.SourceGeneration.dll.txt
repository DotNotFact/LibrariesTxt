internal static class FxResources.System.Text.Json.SourceGeneration.SR : object {
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.RoslynExtensions : object {
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
    [ExtensionAttribute]
private static SymbolVisibility GetResultantVisibility(ISymbol symbol);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string DuplicateTypeNameMessageFormat { get; }
    internal static string DuplicateTypeNameTitle { get; }
    internal static string TypeNotSupportedMessageFormat { get; }
    internal static string TypeNotSupportedTitle { get; }
    internal static string ContextClassesMustBePartialMessageFormat { get; }
    internal static string ContextClassesMustBePartialTitle { get; }
    internal static string MultipleJsonConstructorAttributeFormat { get; }
    internal static string MultipleJsonConstructorAttributeTitle { get; }
    internal static string MultipleJsonExtensionDataAttributeFormat { get; }
    internal static string MultipleJsonExtensionDataAttributeTitle { get; }
    internal static string DataExtensionPropertyInvalidFormat { get; }
    internal static string DataExtensionPropertyInvalidTitle { get; }
    internal static string InitOnlyPropertyDeserializationNotSupportedTitle { get; }
    internal static string InitOnlyPropertyDeserializationNotSupportedFormat { get; }
    internal static string InaccessibleJsonIncludePropertiesNotSupportedTitle { get; }
    internal static string InaccessibleJsonIncludePropertiesNotSupportedFormat { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_DuplicateTypeNameMessageFormat();
    internal static string get_DuplicateTypeNameTitle();
    internal static string get_TypeNotSupportedMessageFormat();
    internal static string get_TypeNotSupportedTitle();
    internal static string get_ContextClassesMustBePartialMessageFormat();
    internal static string get_ContextClassesMustBePartialTitle();
    internal static string get_MultipleJsonConstructorAttributeFormat();
    internal static string get_MultipleJsonConstructorAttributeTitle();
    internal static string get_MultipleJsonExtensionDataAttributeFormat();
    internal static string get_MultipleJsonExtensionDataAttributeTitle();
    internal static string get_DataExtensionPropertyInvalidFormat();
    internal static string get_DataExtensionPropertyInvalidTitle();
    internal static string get_InitOnlyPropertyDeserializationNotSupportedTitle();
    internal static string get_InitOnlyPropertyDeserializationNotSupportedFormat();
    internal static string get_InaccessibleJsonIncludePropertiesNotSupportedTitle();
    internal static string get_InaccessibleJsonIncludePropertiesNotSupportedFormat();
}
internal class System.Text.Json.JsonCamelCaseNamingPolicy : JsonNamingPolicy {
    public virtual string ConvertName(string name);
    private static void FixCasing(Span`1<char> chars);
}
internal static class System.Text.Json.JsonConstants : object {
    public static int MaxParameterCount;
    public static string DoubleFormatString;
    public static string SingleFormatString;
    public static string GlobalNamespaceValue;
    public static string SystemTextJsonSourceGenerationName;
    public static string IJsonOnSerializedFullName;
    public static string IJsonOnSerializingFullName;
}
[ExtensionAttribute]
internal static class System.Text.Json.JsonHelpers : object {
    [ExtensionAttribute]
public static bool TryAdd(Dictionary`2<TKey, TValue> dictionary, TKey& key, TValue& value);
}
internal abstract class System.Text.Json.JsonNamingPolicy : object {
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <CamelCase>k__BackingField;
    public static JsonNamingPolicy CamelCase { get; }
    private static JsonNamingPolicy();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_CamelCase();
    public abstract virtual string ConvertName(string name);
}
internal class System.Text.Json.Reflection.AssemblyWrapper : Assembly {
    private MetadataLoadContextInternal _metadataLoadContext;
    [CompilerGeneratedAttribute]
private IAssemblySymbol <Symbol>k__BackingField;
    internal IAssemblySymbol Symbol { get; }
    public string FullName { get; }
    public AssemblyWrapper(IAssemblySymbol assembly, MetadataLoadContextInternal metadataLoadContext);
    [CompilerGeneratedAttribute]
internal IAssemblySymbol get_Symbol();
    public virtual string get_FullName();
    public virtual Type[] GetExportedTypes();
    public virtual Type[] GetTypes();
    public virtual Type GetType(string name);
}
internal class System.Text.Json.Reflection.ConstructorInfoWrapper : ConstructorInfo {
    private IMethodSymbol _ctor;
    private MetadataLoadContextInternal _metadataLoadContext;
    private Nullable`1<MethodAttributes> _attributes;
    public Type DeclaringType { get; }
    public MethodAttributes Attributes { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public bool IsGenericMethod { get; }
    public ConstructorInfoWrapper(IMethodSymbol ctor, MetadataLoadContextInternal metadataLoadContext);
    public virtual Type get_DeclaringType();
    public virtual MethodAttributes get_Attributes();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual bool get_IsGenericMethod();
    public virtual Type[] GetGenericArguments();
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    public virtual object Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual bool IsDefined(Type attributeType, bool inherit);
}
internal class System.Text.Json.Reflection.CustomAttributeDataWrapper : CustomAttributeData {
    [CompilerGeneratedAttribute]
private ConstructorInfo <Constructor>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<CustomAttributeNamedArgument> <NamedArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<CustomAttributeTypedArgument> <ConstructorArguments>k__BackingField;
    public ConstructorInfo Constructor { get; }
    public IList`1<CustomAttributeNamedArgument> NamedArguments { get; }
    public IList`1<CustomAttributeTypedArgument> ConstructorArguments { get; }
    public CustomAttributeDataWrapper(AttributeData a, MetadataLoadContextInternal metadataLoadContext);
    [CompilerGeneratedAttribute]
public virtual ConstructorInfo get_Constructor();
    [CompilerGeneratedAttribute]
public virtual IList`1<CustomAttributeNamedArgument> get_NamedArguments();
    [CompilerGeneratedAttribute]
public virtual IList`1<CustomAttributeTypedArgument> get_ConstructorArguments();
}
internal class System.Text.Json.Reflection.FieldInfoWrapper : FieldInfo {
    private IFieldSymbol _field;
    private MetadataLoadContextInternal _metadataLoadContext;
    private Nullable`1<FieldAttributes> _attributes;
    public FieldAttributes Attributes { get; }
    public RuntimeFieldHandle FieldHandle { get; }
    public Type FieldType { get; }
    public Type DeclaringType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public Location Location { get; }
    public FieldInfoWrapper(IFieldSymbol parameter, MetadataLoadContextInternal metadataLoadContext);
    public virtual FieldAttributes get_Attributes();
    public virtual RuntimeFieldHandle get_FieldHandle();
    public virtual Type get_FieldType();
    public virtual Type get_DeclaringType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual object GetValue(object obj);
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture);
    public Location get_Location();
}
internal class System.Text.Json.Reflection.MemberInfoWrapper : MemberInfo {
    private ISymbol _member;
    private MetadataLoadContextInternal _metadataLoadContext;
    public Type DeclaringType { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public MemberInfoWrapper(ISymbol member, MetadataLoadContextInternal metadataLoadContext);
    public virtual Type get_DeclaringType();
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual bool IsDefined(Type attributeType, bool inherit);
}
internal class System.Text.Json.Reflection.MetadataLoadContextInternal : object {
    private Compilation _compilation;
    public Compilation Compilation { get; }
    public MetadataLoadContextInternal(Compilation compilation);
    public Compilation get_Compilation();
    public Type Resolve(Type type);
    public Type Resolve(string fullyQualifiedMetadataName);
    public Type Resolve(SpecialType specialType);
}
internal class System.Text.Json.Reflection.MethodInfoWrapper : MethodInfo {
    private IMethodSymbol _method;
    private MetadataLoadContextInternal _metadataLoadContext;
    private Nullable`1<MethodAttributes> _attributes;
    public ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    public MethodAttributes Attributes { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public Type DeclaringType { get; }
    public Type ReturnType { get; }
    public string Name { get; }
    public bool IsGenericMethod { get; }
    public bool IsInitOnly { get; }
    public Type ReflectedType { get; }
    public MethodInfoWrapper(IMethodSymbol method, MetadataLoadContextInternal metadataLoadContext);
    public virtual ICustomAttributeProvider get_ReturnTypeCustomAttributes();
    public virtual MethodAttributes get_Attributes();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual Type get_DeclaringType();
    public virtual Type get_ReturnType();
    public virtual string get_Name();
    public virtual bool get_IsGenericMethod();
    public bool get_IsInitOnly();
    public virtual Type get_ReflectedType();
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual MethodInfo GetBaseDefinition();
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Type[] GetGenericArguments();
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    public virtual object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual bool IsDefined(Type attributeType, bool inherit);
}
internal class System.Text.Json.Reflection.ParameterInfoWrapper : ParameterInfo {
    private IParameterSymbol _parameter;
    private MetadataLoadContextInternal _metadataLoadContext;
    public Type ParameterType { get; }
    public string Name { get; }
    public bool HasDefaultValue { get; }
    public object DefaultValue { get; }
    public int Position { get; }
    public ParameterInfoWrapper(IParameterSymbol parameter, MetadataLoadContextInternal metadataLoadContext);
    public virtual Type get_ParameterType();
    public virtual string get_Name();
    public virtual bool get_HasDefaultValue();
    public virtual object get_DefaultValue();
    public virtual int get_Position();
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
}
internal class System.Text.Json.Reflection.PropertyInfoWrapper : PropertyInfo {
    private IPropertySymbol _property;
    private MetadataLoadContextInternal _metadataLoadContext;
    public PropertyAttributes Attributes { get; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public Type PropertyType { get; }
    public Type DeclaringType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public Location Location { get; }
    public PropertyInfoWrapper(IPropertySymbol property, MetadataLoadContextInternal metadataLoadContext);
    public virtual PropertyAttributes get_Attributes();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual Type get_PropertyType();
    public virtual Type get_DeclaringType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual MethodInfo[] GetAccessors(bool nonPublic);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual MethodInfo GetGetMethod(bool nonPublic);
    public virtual ParameterInfo[] GetIndexParameters();
    public virtual MethodInfo GetSetMethod(bool nonPublic);
    public virtual object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public Location get_Location();
}
[ExtensionAttribute]
internal static class System.Text.Json.Reflection.ReflectionExtensions : object {
    private static string ImmutableArrayGenericTypeName;
    private static string ImmutableListGenericTypeName;
    private static string ImmutableListGenericInterfaceTypeName;
    private static string ImmutableStackGenericTypeName;
    private static string ImmutableStackGenericInterfaceTypeName;
    private static string ImmutableQueueGenericTypeName;
    private static string ImmutableQueueGenericInterfaceTypeName;
    private static string ImmutableSortedSetGenericTypeName;
    private static string ImmutableHashSetGenericTypeName;
    private static string ImmutableSetGenericInterfaceTypeName;
    private static string ImmutableDictionaryGenericTypeName;
    private static string ImmutableDictionaryGenericInterfaceTypeName;
    private static string ImmutableSortedDictionaryGenericTypeName;
    private static string ImmutableArrayTypeName;
    private static string ImmutableListTypeName;
    private static string ImmutableStackTypeName;
    private static string ImmutableQueueTypeName;
    private static string ImmutableSortedSetTypeName;
    private static string ImmutableHashSetTypeName;
    private static string ImmutableDictionaryTypeName;
    private static string ImmutableSortedDictionaryTypeName;
    public static string CreateRangeMethodName;
    [ExtensionAttribute]
public static Type GetCompatibleGenericBaseClass(Type type, Type baseType, Type objectType, bool sourceGenType);
    [ExtensionAttribute]
public static Type GetCompatibleGenericInterface(Type type, Type interfaceType);
    [ExtensionAttribute]
public static bool IsImmutableDictionaryType(Type type, bool sourceGenType);
    [ExtensionAttribute]
public static bool IsImmutableEnumerableType(Type type, bool sourceGenType);
    [ExtensionAttribute]
public static string GetImmutableDictionaryConstructingTypeName(Type type, bool sourceGenType);
    [ExtensionAttribute]
public static string GetImmutableEnumerableConstructingTypeName(Type type, bool sourceGenType);
    private static bool OpenGenericTypesHaveSamePrefix(Type t1, Type t2);
    private static string GetBaseNameFromGenericType(Type genericType, bool sourceGenType);
    private static string GetBaseNameFromGenericTypeDef(Type genericTypeDef);
    [ExtensionAttribute]
public static bool IsVirtual(PropertyInfo propertyInfo);
    [ExtensionAttribute]
public static bool IsKeyValuePair(Type type, Type keyValuePairType);
    [ExtensionAttribute]
public static bool TryGetDeserializationConstructor(Type type, bool useDefaultCtorInAnnotatedStructs, ConstructorInfo& deserializationCtor);
    [ExtensionAttribute]
public static object GetDefaultValue(ParameterInfo parameterInfo);
    [ExtensionAttribute]
public static CustomAttributeData GetCustomAttributeData(MemberInfo memberInfo, Type type);
    [ExtensionAttribute]
public static TValue GetConstructorArgument(CustomAttributeData customAttributeData, int index);
    [ExtensionAttribute]
public static bool IsInitOnly(MethodInfo method);
    private static bool HasJsonConstructorAttribute(ConstructorInfo constructorInfo);
    [ExtensionAttribute]
public static Location GetDiagnosticLocation(Type type);
    [ExtensionAttribute]
public static Location GetDiagnosticLocation(PropertyInfo propertyInfo);
    [ExtensionAttribute]
public static Location GetDiagnosticLocation(FieldInfo fieldInfo);
}
[ExtensionAttribute]
internal static class System.Text.Json.Reflection.RoslynExtensions : object {
    [ExtensionAttribute]
public static Type AsType(ITypeSymbol typeSymbol, MetadataLoadContextInternal metadataLoadContext);
    [ExtensionAttribute]
public static MethodInfo AsMethodInfo(IMethodSymbol methodSymbol, MetadataLoadContextInternal metadataLoadContext);
    [IteratorStateMachineAttribute("System.Text.Json.Reflection.RoslynExtensions/<BaseTypes>d__2")]
[ExtensionAttribute]
public static IEnumerable`1<INamedTypeSymbol> BaseTypes(INamedTypeSymbol typeSymbol);
    [ExtensionAttribute]
public static MethodAttributes GetMethodAttributes(IMethodSymbol methodSymbol);
}
[ExtensionAttribute]
internal static class System.Text.Json.Reflection.TypeExtensions : object {
    [ExtensionAttribute]
public static string GetCompilableName(Type type);
    [ExtensionAttribute]
public static string GetTypeInfoPropertyName(Type type);
    [ExtensionAttribute]
public static bool IsNullableValueType(Type type, Type nullableOfTType, Type& underlyingType);
    [ExtensionAttribute]
public static bool IsNullableValueType(Type type, Type& underlyingType);
    [ExtensionAttribute]
public static bool CanContainNullableReferenceTypeAnnotations(Type type);
    [ExtensionAttribute]
public static bool IsObjectType(Type type);
    [ExtensionAttribute]
public static bool IsStringType(Type type);
    [ExtensionAttribute]
public static Type GetCompatibleBaseClass(Type type, string baseTypeFullName);
}
internal class System.Text.Json.Reflection.TypeWrapper : Type {
    private ITypeSymbol _typeSymbol;
    private MetadataLoadContextInternal _metadataLoadContext;
    private INamedTypeSymbol _namedTypeSymbol;
    private IArrayTypeSymbol _arrayTypeSymbol;
    private Type _elementType;
    private string _assemblyQualifiedName;
    private string _fullName;
    private Type _enumType;
    private Nullable`1<TypeAttributes> _typeAttributes;
    private Type _valueType;
    public Assembly Assembly { get; }
    public string AssemblyQualifiedName { get; }
    public Type BaseType { get; }
    public string FullName { get; }
    public Guid GUID { get; }
    public Module Module { get; }
    public string Namespace { get; }
    public Type UnderlyingSystemType { get; }
    public string Name { get; }
    public string SimpleName { get; }
    public bool IsEnum { get; }
    public bool IsGenericType { get; }
    public bool ContainsGenericParameters { get; }
    public bool IsGenericTypeDefinition { get; }
    public INamespaceSymbol GetNamespaceSymbol { get; }
    public Location Location { get; }
    public TypeWrapper(ITypeSymbol namedTypeSymbol, MetadataLoadContextInternal metadataLoadContext);
    public virtual Assembly get_Assembly();
    public virtual string get_AssemblyQualifiedName();
    public virtual Type get_BaseType();
    public virtual string get_FullName();
    public virtual Guid get_GUID();
    public virtual Module get_Module();
    public virtual string get_Namespace();
    public virtual Type get_UnderlyingSystemType();
    public virtual string get_Name();
    public string get_SimpleName();
    public virtual bool get_IsEnum();
    public virtual bool get_IsGenericType();
    public virtual bool get_ContainsGenericParameters();
    public virtual bool get_IsGenericTypeDefinition();
    public INamespaceSymbol get_GetNamespaceSymbol();
    public virtual Type[] GetGenericArguments();
    public virtual Type GetGenericTypeDefinition();
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual ConstructorInfo[] GetConstructors(BindingFlags bindingAttr);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Type GetElementType();
    public virtual Type MakeArrayType();
    public virtual EventInfo GetEvent(string name, BindingFlags bindingAttr);
    public virtual EventInfo[] GetEvents(BindingFlags bindingAttr);
    public virtual FieldInfo GetField(string name, BindingFlags bindingAttr);
    public virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public virtual Type GetInterface(string name, bool ignoreCase);
    public virtual Type[] GetInterfaces();
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    public virtual Type GetNestedType(string name, BindingFlags bindingAttr);
    public virtual Type[] GetNestedTypes(BindingFlags bindingAttr);
    public virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    public virtual object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters);
    public virtual bool IsDefined(Type attributeType, bool inherit);
    protected virtual TypeAttributes GetAttributeFlagsImpl();
    protected virtual ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);
    protected virtual MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);
    protected virtual PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    protected virtual bool HasElementTypeImpl();
    protected virtual bool IsArrayImpl();
    protected virtual bool IsValueTypeImpl();
    protected virtual bool IsByRefImpl();
    protected virtual bool IsCOMObjectImpl();
    protected virtual bool IsPointerImpl();
    protected virtual bool IsPrimitiveImpl();
    public virtual bool IsAssignableFrom(Type c);
    public virtual int GetHashCode();
    public virtual int GetArrayRank();
    public virtual bool Equals(object o);
    public virtual bool Equals(Type o);
    public Location get_Location();
}
internal abstract class System.Text.Json.Serialization.JsonAttribute : Attribute {
}
internal enum System.Text.Json.Serialization.JsonIgnoreCondition : Enum {
    public int value__;
    public static JsonIgnoreCondition Never;
    public static JsonIgnoreCondition Always;
    public static JsonIgnoreCondition WhenWritingDefault;
    public static JsonIgnoreCondition WhenWritingNull;
}
internal enum System.Text.Json.Serialization.JsonKnownNamingPolicy : Enum {
    public int value__;
    public static JsonKnownNamingPolicy Unspecified;
    public static JsonKnownNamingPolicy CamelCase;
}
[FlagsAttribute]
internal enum System.Text.Json.Serialization.JsonNumberHandling : Enum {
    public int value__;
    public static JsonNumberHandling Strict;
    public static JsonNumberHandling AllowReadingFromString;
    public static JsonNumberHandling WriteAsString;
    public static JsonNumberHandling AllowNamedFloatingPointLiterals;
}
[AttributeUsageAttribute("4")]
internal class System.Text.Json.Serialization.JsonSerializableAttribute : JsonAttribute {
    [CompilerGeneratedAttribute]
private string <TypeInfoPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    public string TypeInfoPropertyName { get; public set; }
    public JsonSourceGenerationMode GenerationMode { get; public set; }
    public JsonSerializableAttribute(Type type);
    [CompilerGeneratedAttribute]
public string get_TypeInfoPropertyName();
    [CompilerGeneratedAttribute]
public void set_TypeInfoPropertyName(string value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public void set_GenerationMode(JsonSourceGenerationMode value);
}
[FlagsAttribute]
internal enum System.Text.Json.Serialization.JsonSourceGenerationMode : Enum {
    public int value__;
    public static JsonSourceGenerationMode Default;
    public static JsonSourceGenerationMode Metadata;
    public static JsonSourceGenerationMode Serialization;
}
[AttributeUsageAttribute("4")]
internal class System.Text.Json.Serialization.JsonSourceGenerationOptionsAttribute : JsonAttribute {
    [CompilerGeneratedAttribute]
private JsonIgnoreCondition <DefaultIgnoreCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreReadOnlyFields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreReadOnlyProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonKnownNamingPolicy <PropertyNamingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteIndented>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    public JsonIgnoreCondition DefaultIgnoreCondition { get; public set; }
    public bool IgnoreReadOnlyFields { get; public set; }
    public bool IgnoreReadOnlyProperties { get; public set; }
    public bool IncludeFields { get; public set; }
    public JsonKnownNamingPolicy PropertyNamingPolicy { get; public set; }
    public bool WriteIndented { get; public set; }
    public JsonSourceGenerationMode GenerationMode { get; public set; }
    [CompilerGeneratedAttribute]
public JsonIgnoreCondition get_DefaultIgnoreCondition();
    [CompilerGeneratedAttribute]
public void set_DefaultIgnoreCondition(JsonIgnoreCondition value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreReadOnlyFields();
    [CompilerGeneratedAttribute]
public void set_IgnoreReadOnlyFields(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreReadOnlyProperties();
    [CompilerGeneratedAttribute]
public void set_IgnoreReadOnlyProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeFields();
    [CompilerGeneratedAttribute]
public void set_IncludeFields(bool value);
    [CompilerGeneratedAttribute]
public JsonKnownNamingPolicy get_PropertyNamingPolicy();
    [CompilerGeneratedAttribute]
public void set_PropertyNamingPolicy(JsonKnownNamingPolicy value);
    [CompilerGeneratedAttribute]
public bool get_WriteIndented();
    [CompilerGeneratedAttribute]
public void set_WriteIndented(bool value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public void set_GenerationMode(JsonSourceGenerationMode value);
}
internal enum System.Text.Json.SourceGeneration.ClassType : Enum {
    public int value__;
    public static ClassType TypeUnsupportedBySourceGen;
    public static ClassType Object;
    public static ClassType KnownType;
    public static ClassType KnownUnsupportedType;
    public static ClassType TypeWithDesignTimeProvidedCustomConverter;
    public static ClassType Enumerable;
    public static ClassType Dictionary;
    public static ClassType Nullable;
    public static ClassType Enum;
}
internal enum System.Text.Json.SourceGeneration.CollectionType : Enum {
    public int value__;
    public static CollectionType NotApplicable;
    public static CollectionType IDictionary;
    public static CollectionType Dictionary;
    public static CollectionType ImmutableDictionary;
    public static CollectionType IDictionaryOfTKeyTValue;
    public static CollectionType IReadOnlyDictionary;
    public static CollectionType Array;
    public static CollectionType List;
    public static CollectionType IEnumerable;
    public static CollectionType IList;
    public static CollectionType IListOfT;
    public static CollectionType ISet;
    public static CollectionType ICollectionOfT;
    public static CollectionType StackOfT;
    public static CollectionType QueueOfT;
    public static CollectionType ConcurrentStack;
    public static CollectionType ConcurrentQueue;
    public static CollectionType IEnumerableOfT;
    public static CollectionType Stack;
    public static CollectionType Queue;
    public static CollectionType ImmutableEnumerable;
}
[DebuggerDisplayAttribute("ContextTypeRef={ContextTypeRef}")]
internal class System.Text.Json.SourceGeneration.ContextGenerationSpec : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationOptionsAttribute <GenerationOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ContextType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TypeGenerationSpec> <RootSerializableTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<TypeGenerationSpec> <ImplicitlyRegisteredTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ContextClassDeclarationList>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<TypeGenerationSpec> <TypesWithMetadataGenerated>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <RuntimePropertyNames>k__BackingField;
    public Location Location { get; public set; }
    public JsonSourceGenerationOptionsAttribute GenerationOptions { get; public set; }
    public Type ContextType { get; public set; }
    public List`1<TypeGenerationSpec> RootSerializableTypes { get; }
    public HashSet`1<TypeGenerationSpec> ImplicitlyRegisteredTypes { get; }
    public List`1<string> ContextClassDeclarationList { get; public set; }
    public HashSet`1<TypeGenerationSpec> TypesWithMetadataGenerated { get; }
    public Dictionary`2<string, string> RuntimePropertyNames { get; }
    public string ContextTypeRef { get; }
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Location(Location value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationOptionsAttribute get_GenerationOptions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenerationOptions(JsonSourceGenerationOptionsAttribute value);
    [CompilerGeneratedAttribute]
public Type get_ContextType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContextType(Type value);
    [CompilerGeneratedAttribute]
public List`1<TypeGenerationSpec> get_RootSerializableTypes();
    [CompilerGeneratedAttribute]
public HashSet`1<TypeGenerationSpec> get_ImplicitlyRegisteredTypes();
    [CompilerGeneratedAttribute]
public List`1<string> get_ContextClassDeclarationList();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContextClassDeclarationList(List`1<string> value);
    [CompilerGeneratedAttribute]
public HashSet`1<TypeGenerationSpec> get_TypesWithMetadataGenerated();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RuntimePropertyNames();
    public string get_ContextTypeRef();
}
[IsReadOnlyAttribute]
internal class System.Text.Json.SourceGeneration.JsonSourceGenerationContext : ValueType {
    private SourceProductionContext _context;
    public JsonSourceGenerationContext(SourceProductionContext context);
    public void ReportDiagnostic(Diagnostic diagnostic);
    public void AddSource(string hintName, SourceText sourceText);
}
[GeneratorAttribute]
public class System.Text.Json.SourceGeneration.JsonSourceGenerator : object {
    private List`1<TypeGenerationSpec> _rootTypes;
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private void Execute(Compilation compilation, ImmutableArray`1<ClassDeclarationSyntax> contextClasses, SourceProductionContext sourceProductionContext);
    public Dictionary`2<string, Type> GetSerializableTypes();
    [CompilerGeneratedAttribute]
private void <Initialize>b__2_3(SourceProductionContext spc, ValueTuple`2<Compilation, ImmutableArray`1<ClassDeclarationSyntax>> source);
}
internal enum System.Text.Json.SourceGeneration.ObjectConstructionStrategy : Enum {
    public int value__;
    public static ObjectConstructionStrategy NotApplicable;
    public static ObjectConstructionStrategy ParameterlessConstructor;
    public static ObjectConstructionStrategy ParameterizedConstructor;
}
internal class System.Text.Json.SourceGeneration.ParameterGenerationSpec : object {
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <TypeGenerationSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo <ParameterInfo>k__BackingField;
    public TypeGenerationSpec TypeGenerationSpec { get; public set; }
    public ParameterInfo ParameterInfo { get; public set; }
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_TypeGenerationSpec();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeGenerationSpec(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public ParameterInfo get_ParameterInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParameterInfo(ParameterInfo value);
}
[DebuggerDisplayAttribute("Name={Name}, Type={TypeMetadata}")]
internal class System.Text.Json.SourceGeneration.PropertyGenerationSpec : object {
    [CompilerGeneratedAttribute]
private string <ClrName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimePropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyNameVarName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInitOnlySetter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanUseGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanUseSetter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetterIsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetterIsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonIgnoreCondition> <DefaultIgnoreCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonNumberHandling> <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasJsonInclude>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExtensionData>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <TypeGenerationSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeclaringTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConverterInstantiationLogic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasFactoryConverter>k__BackingField;
    public string ClrName { get; public set; }
    public bool IsProperty { get; public set; }
    public bool IsPublic { get; public set; }
    public bool IsVirtual { get; public set; }
    public string JsonPropertyName { get; public set; }
    public string RuntimePropertyName { get; public set; }
    public string PropertyNameVarName { get; public set; }
    public bool IsReadOnly { get; public set; }
    public bool IsInitOnlySetter { get; public set; }
    public bool CanUseGetter { get; public set; }
    public bool CanUseSetter { get; public set; }
    public bool GetterIsVirtual { get; public set; }
    public bool SetterIsVirtual { get; public set; }
    public Nullable`1<JsonIgnoreCondition> DefaultIgnoreCondition { get; public set; }
    public Nullable`1<JsonNumberHandling> NumberHandling { get; public set; }
    public int Order { get; public set; }
    public bool HasJsonInclude { get; public set; }
    public bool IsExtensionData { get; public set; }
    public TypeGenerationSpec TypeGenerationSpec { get; public set; }
    public string DeclaringTypeRef { get; public set; }
    public string ConverterInstantiationLogic { get; public set; }
    public bool HasFactoryConverter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClrName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClrName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsProperty();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVirtual();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsVirtual(bool value);
    [CompilerGeneratedAttribute]
public string get_JsonPropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_JsonPropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_RuntimePropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RuntimePropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyNameVarName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNameVarName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsInitOnlySetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsInitOnlySetter(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanUseGetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanUseGetter(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanUseSetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanUseSetter(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetterIsVirtual();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GetterIsVirtual(bool value);
    [CompilerGeneratedAttribute]
public bool get_SetterIsVirtual();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SetterIsVirtual(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonIgnoreCondition> get_DefaultIgnoreCondition();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultIgnoreCondition(Nullable`1<JsonIgnoreCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonNumberHandling> get_NumberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumberHandling(Nullable`1<JsonNumberHandling> value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Order(int value);
    [CompilerGeneratedAttribute]
public bool get_HasJsonInclude();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasJsonInclude(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsExtensionData();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsExtensionData(bool value);
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_TypeGenerationSpec();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeGenerationSpec(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public string get_DeclaringTypeRef();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DeclaringTypeRef(string value);
    [CompilerGeneratedAttribute]
public string get_ConverterInstantiationLogic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConverterInstantiationLogic(string value);
    [CompilerGeneratedAttribute]
public bool get_HasFactoryConverter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasFactoryConverter(bool value);
}
internal class System.Text.Json.SourceGeneration.SourceGenerationSpec : object {
    [CompilerGeneratedAttribute]
private List`1<ContextGenerationSpec> <ContextGenerationSpecList>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <BooleanType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ByteArrayType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <CharType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DateTimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DateTimeOffsetType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <GuidType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringType>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <NumberTypes>k__BackingField;
    public List`1<ContextGenerationSpec> ContextGenerationSpecList { get; public set; }
    public Type BooleanType { get; public set; }
    public Type ByteArrayType { get; public set; }
    public Type CharType { get; public set; }
    private Type DateTimeType { get; public set; }
    private Type DateTimeOffsetType { get; public set; }
    private Type GuidType { get; public set; }
    private Type StringType { get; public set; }
    private HashSet`1<Type> NumberTypes { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ContextGenerationSpec> get_ContextGenerationSpecList();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContextGenerationSpecList(List`1<ContextGenerationSpec> value);
    [CompilerGeneratedAttribute]
public Type get_BooleanType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BooleanType(Type value);
    [CompilerGeneratedAttribute]
public Type get_ByteArrayType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ByteArrayType(Type value);
    [CompilerGeneratedAttribute]
public Type get_CharType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CharType(Type value);
    [CompilerGeneratedAttribute]
private Type get_DateTimeType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DateTimeType(Type value);
    [CompilerGeneratedAttribute]
private Type get_DateTimeOffsetType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DateTimeOffsetType(Type value);
    [CompilerGeneratedAttribute]
private Type get_GuidType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GuidType(Type value);
    [CompilerGeneratedAttribute]
private Type get_StringType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_StringType(Type value);
    [CompilerGeneratedAttribute]
private HashSet`1<Type> get_NumberTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumberTypes(HashSet`1<Type> value);
    public bool IsStringBasedType(Type type);
    public bool IsNumberType(Type type);
}
[DebuggerDisplayAttribute("Type={Type}, ClassType={ClassType}")]
internal class System.Text.Json.SourceGeneration.TypeGenerationSpec : object {
    [CompilerGeneratedAttribute]
private string <TypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <AttributeLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeInfoPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassType <ClassType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImplementsIJsonOnSerialized>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImplementsIJsonOnSerializing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeNull>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonNumberHandling> <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PropertyGenerationSpec> <PropertyGenSpecList>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterGenerationSpec[] <CtorParamGenSpecArray>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionType <CollectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <CollectionKeyTypeMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <CollectionValueTypeMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectConstructionStrategy <ConstructionStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <NullableUnderlyingTypeMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeGenerationSpec <ExtensionDataPropertyTypeSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConverterInstantiationLogic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPropertyFactoryConverters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasTypeFactoryConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanContainNullableReferenceAnnotations>k__BackingField;
    public string TypeRef { get; private set; }
    public Location AttributeLocation { get; public set; }
    public string TypeInfoPropertyName { get; public set; }
    public JsonSourceGenerationMode GenerationMode { get; public set; }
    public bool GenerateMetadata { get; }
    public bool GenerateSerializationLogic { get; }
    public Type Type { get; private set; }
    public ClassType ClassType { get; private set; }
    public bool ImplementsIJsonOnSerialized { get; private set; }
    public bool ImplementsIJsonOnSerializing { get; private set; }
    public bool IsValueType { get; private set; }
    public bool CanBeNull { get; private set; }
    public Nullable`1<JsonNumberHandling> NumberHandling { get; private set; }
    public List`1<PropertyGenerationSpec> PropertyGenSpecList { get; private set; }
    public ParameterGenerationSpec[] CtorParamGenSpecArray { get; private set; }
    public CollectionType CollectionType { get; private set; }
    public TypeGenerationSpec CollectionKeyTypeMetadata { get; private set; }
    public TypeGenerationSpec CollectionValueTypeMetadata { get; private set; }
    public ObjectConstructionStrategy ConstructionStrategy { get; private set; }
    public TypeGenerationSpec NullableUnderlyingTypeMetadata { get; private set; }
    public string RuntimeTypeRef { get; private set; }
    public TypeGenerationSpec ExtensionDataPropertyTypeSpec { get; private set; }
    public string ConverterInstantiationLogic { get; private set; }
    public bool HasPropertyFactoryConverters { get; private set; }
    public bool HasTypeFactoryConverter { get; private set; }
    public bool CanContainNullableReferenceAnnotations { get; private set; }
    public string ImmutableCollectionBuilderName { get; }
    [CompilerGeneratedAttribute]
public string get_TypeRef();
    [CompilerGeneratedAttribute]
private void set_TypeRef(string value);
    [CompilerGeneratedAttribute]
public Location get_AttributeLocation();
    [CompilerGeneratedAttribute]
public void set_AttributeLocation(Location value);
    [CompilerGeneratedAttribute]
public string get_TypeInfoPropertyName();
    [CompilerGeneratedAttribute]
public void set_TypeInfoPropertyName(string value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public void set_GenerationMode(JsonSourceGenerationMode value);
    public bool get_GenerateMetadata();
    public bool get_GenerateSerializationLogic();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(Type value);
    [CompilerGeneratedAttribute]
public ClassType get_ClassType();
    [CompilerGeneratedAttribute]
private void set_ClassType(ClassType value);
    [CompilerGeneratedAttribute]
public bool get_ImplementsIJsonOnSerialized();
    [CompilerGeneratedAttribute]
private void set_ImplementsIJsonOnSerialized(bool value);
    [CompilerGeneratedAttribute]
public bool get_ImplementsIJsonOnSerializing();
    [CompilerGeneratedAttribute]
private void set_ImplementsIJsonOnSerializing(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
private void set_IsValueType(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanBeNull();
    [CompilerGeneratedAttribute]
private void set_CanBeNull(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonNumberHandling> get_NumberHandling();
    [CompilerGeneratedAttribute]
private void set_NumberHandling(Nullable`1<JsonNumberHandling> value);
    [CompilerGeneratedAttribute]
public List`1<PropertyGenerationSpec> get_PropertyGenSpecList();
    [CompilerGeneratedAttribute]
private void set_PropertyGenSpecList(List`1<PropertyGenerationSpec> value);
    [CompilerGeneratedAttribute]
public ParameterGenerationSpec[] get_CtorParamGenSpecArray();
    [CompilerGeneratedAttribute]
private void set_CtorParamGenSpecArray(ParameterGenerationSpec[] value);
    [CompilerGeneratedAttribute]
public CollectionType get_CollectionType();
    [CompilerGeneratedAttribute]
private void set_CollectionType(CollectionType value);
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_CollectionKeyTypeMetadata();
    [CompilerGeneratedAttribute]
private void set_CollectionKeyTypeMetadata(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_CollectionValueTypeMetadata();
    [CompilerGeneratedAttribute]
private void set_CollectionValueTypeMetadata(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public ObjectConstructionStrategy get_ConstructionStrategy();
    [CompilerGeneratedAttribute]
private void set_ConstructionStrategy(ObjectConstructionStrategy value);
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_NullableUnderlyingTypeMetadata();
    [CompilerGeneratedAttribute]
private void set_NullableUnderlyingTypeMetadata(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public string get_RuntimeTypeRef();
    [CompilerGeneratedAttribute]
private void set_RuntimeTypeRef(string value);
    [CompilerGeneratedAttribute]
public TypeGenerationSpec get_ExtensionDataPropertyTypeSpec();
    [CompilerGeneratedAttribute]
private void set_ExtensionDataPropertyTypeSpec(TypeGenerationSpec value);
    [CompilerGeneratedAttribute]
public string get_ConverterInstantiationLogic();
    [CompilerGeneratedAttribute]
private void set_ConverterInstantiationLogic(string value);
    [CompilerGeneratedAttribute]
public bool get_HasPropertyFactoryConverters();
    [CompilerGeneratedAttribute]
private void set_HasPropertyFactoryConverters(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasTypeFactoryConverter();
    [CompilerGeneratedAttribute]
private void set_HasTypeFactoryConverter(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanContainNullableReferenceAnnotations();
    [CompilerGeneratedAttribute]
private void set_CanContainNullableReferenceAnnotations(bool value);
    public string get_ImmutableCollectionBuilderName();
    public void Initialize(JsonSourceGenerationMode generationMode, Type type, ClassType classType, Nullable`1<JsonNumberHandling> numberHandling, List`1<PropertyGenerationSpec> propertyGenSpecList, ParameterGenerationSpec[] ctorParamGenSpecArray, CollectionType collectionType, TypeGenerationSpec collectionKeyTypeMetadata, TypeGenerationSpec collectionValueTypeMetadata, ObjectConstructionStrategy constructionStrategy, TypeGenerationSpec nullableUnderlyingTypeMetadata, string runtimeTypeRef, TypeGenerationSpec extensionDataPropertyTypeSpec, string converterInstantiationLogic, bool implementsIJsonOnSerialized, bool implementsIJsonOnSerializing, bool hasTypeFactoryConverter, bool canContainNullableReferenceAnnotations, bool hasPropertyFactoryConverters);
    public bool TryFilterSerializableProps(JsonSourceGenerationOptionsAttribute options, Dictionary`2& serializableProperties, Boolean& castingRequiredForProps);
    private bool FastPathIsSupported();
    private bool GenerationModeIsSpecified(JsonSourceGenerationMode mode);
}
