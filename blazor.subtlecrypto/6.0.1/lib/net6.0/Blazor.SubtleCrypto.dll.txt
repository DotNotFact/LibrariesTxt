public enum Blazor.SubtleCrypto.AlgorithmType : Enum {
    public int value__;
    public static AlgorithmType Sha256;
}
public class Blazor.SubtleCrypto.CryptoError : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Reason>k__BackingField;
    public string Origin { get; public set; }
    public string Reason { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
public class Blazor.SubtleCrypto.CryptoInput : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Key>k__BackingField;
    public string Value { get; public set; }
    public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
}
public class Blazor.SubtleCrypto.CryptoOptions : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private EncryptionType <Encryption>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AlgorithmType <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <DoubleEncryption>k__BackingField;
    public string Key { get; public set; }
    public EncryptionType Encryption { get; public set; }
    public AlgorithmType Algorithm { get; public set; }
    public bool DoubleEncryption { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public EncryptionType get_Encryption();
    [CompilerGeneratedAttribute]
public void set_Encryption(EncryptionType value);
    [CompilerGeneratedAttribute]
public AlgorithmType get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(AlgorithmType value);
    [CompilerGeneratedAttribute]
public bool get_DoubleEncryption();
    [CompilerGeneratedAttribute]
public void set_DoubleEncryption(bool value);
}
public class Blazor.SubtleCrypto.CryptoResult : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Secret <Secret>k__BackingField;
    public bool Status { get; public set; }
    public string Origin { get; public set; }
    public string Value { get; public set; }
    public Secret Secret { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(bool value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public Secret get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(Secret value);
}
public class Blazor.SubtleCrypto.CryptoService : object {
    private string _Encryption;
    private string _Algorithm;
    private string _Key;
    private bool _isGlobalKey;
    private bool _DoubleEncryption;
    private IJSRuntime _jsRuntime;
    private string chars;
    private int KeySizeMin;
    private int KeySizeMax;
    private int IVSize;
    public CryptoService(IJSRuntime jsRuntime, CryptoOptions options);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<EncryptAsync>d__11")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<CryptoResult> EncryptAsync(string text);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<EncryptAsync>d__12")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<CryptoResult> EncryptAsync(object obj);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<EncryptListAsync>d__13")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<CryptoResult>> EncryptListAsync(List`1<string> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<EncryptListAsync>d__14`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<CryptoResult>> EncryptListAsync(List`1<T> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptAsync>d__15")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<string> DecryptAsync(string text);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptAsync>d__16`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> DecryptAsync(string text);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptAsync>d__17")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<string> DecryptAsync(CryptoInput input);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptAsync>d__18`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> DecryptAsync(CryptoInput input);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptListAsync>d__19")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<string>> DecryptListAsync(List`1<string> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptListAsync>d__20`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<T>> DecryptListAsync(List`1<string> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptListAsync>d__21")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<string>> DecryptListAsync(List`1<CryptoInput> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<DecryptListAsync>d__22`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<T>> DecryptListAsync(List`1<CryptoInput> list);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<AddSubtleCryptoMethods>d__23")]
[DebuggerStepThroughAttribute]
private Task AddSubtleCryptoMethods();
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<SubtleEncrypt>d__24")]
[DebuggerStepThroughAttribute]
private Task`1<List`1<CryptoResult>> SubtleEncrypt(object obj);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<SubtleDecrypt>d__25")]
[DebuggerStepThroughAttribute]
private Task`1<List`1<string>> SubtleDecrypt(object obj);
    private string GenRandomText(int charMin, int charMax);
    private string InternalEncrypt(string text, string key);
    [AsyncStateMachineAttribute("Blazor.SubtleCrypto.CryptoService/<InternalDecrypt>d__28")]
[DebuggerStepThroughAttribute]
private Task`1<string> InternalDecrypt(string text, string key);
    private string XORCipher(string data, string key);
    private CryptoResult CreateItem(int index, object obj, bool isEncrypt, string key);
    private Task`1<T> DeserializeData(string text);
    [CompilerGeneratedAttribute]
private CryptoResult <EncryptListAsync>b__13_0(string x, int i);
    [CompilerGeneratedAttribute]
private CryptoResult <EncryptListAsync>b__14_0(T x, int i);
    [CompilerGeneratedAttribute]
private CryptoResult <DecryptListAsync>b__19_0(string x, int i);
    [CompilerGeneratedAttribute]
private Task`1<string> <DecryptListAsync>b__19_1(string x);
    [CompilerGeneratedAttribute]
private Task`1<T> <DecryptListAsync>b__20_0(string x);
    [CompilerGeneratedAttribute]
private CryptoResult <DecryptListAsync>b__21_0(CryptoInput x, int i);
    [CompilerGeneratedAttribute]
private Task`1<T> <DecryptListAsync>b__22_0(string x);
}
public enum Blazor.SubtleCrypto.EncryptionType : Enum {
    public int value__;
    public static EncryptionType AES_GCM;
}
public interface Blazor.SubtleCrypto.ICryptoService {
    public abstract virtual Task`1<CryptoResult> EncryptAsync(string text);
    public abstract virtual Task`1<CryptoResult> EncryptAsync(object obj);
    public abstract virtual Task`1<List`1<CryptoResult>> EncryptListAsync(List`1<string> list);
    public abstract virtual Task`1<List`1<CryptoResult>> EncryptListAsync(List`1<T> list);
    public abstract virtual Task`1<string> DecryptAsync(string text);
    public abstract virtual Task`1<T> DecryptAsync(string text);
    public abstract virtual Task`1<string> DecryptAsync(CryptoInput input);
    public abstract virtual Task`1<T> DecryptAsync(CryptoInput input);
    public abstract virtual Task`1<List`1<string>> DecryptListAsync(List`1<string> list);
    public abstract virtual Task`1<List`1<T>> DecryptListAsync(List`1<string> list);
    public abstract virtual Task`1<List`1<string>> DecryptListAsync(List`1<CryptoInput> list);
    public abstract virtual Task`1<List`1<T>> DecryptListAsync(List`1<CryptoInput> list);
}
[ExtensionAttribute]
public static class Blazor.SubtleCrypto.IServiceCollectionExtension : object {
    [ExtensionAttribute]
public static IServiceCollection AddSubtleCrypto(IServiceCollection services, Action`1<CryptoOptions> setup);
}
public class Blazor.SubtleCrypto.PromiseResult : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CryptoResult <Value>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Reason>k__BackingField;
    public string Status { get; public set; }
    public CryptoResult Value { get; public set; }
    public string Reason { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public CryptoResult get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(CryptoResult value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
public class Blazor.SubtleCrypto.Secret : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <IV>k__BackingField;
    public string Key { get; public set; }
    public string IV { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_IV();
    [CompilerGeneratedAttribute]
public void set_IV(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
