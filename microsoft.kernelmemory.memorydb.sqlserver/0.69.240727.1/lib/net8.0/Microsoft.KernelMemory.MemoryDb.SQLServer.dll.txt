[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [ExtensionAttribute]
public static IServiceCollection AddSqlServerAsMemoryDb(IServiceCollection services, SqlServerConfig config);
    [ExtensionAttribute]
public static IServiceCollection AddSqlServerAsMemoryDb(IServiceCollection services, string connString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithSqlServerMemoryDb(IKernelMemoryBuilder builder, SqlServerConfig config);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithSqlServerMemoryDb(IKernelMemoryBuilder builder, string connString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerConfig : object {
    internal static string DefaultMemoryCollectionTableName;
    internal static string DefaultMemoryTableName;
    internal static string DefaultEmbeddingsTableName;
    internal static string DefaultTagsTableName;
    public static string DefaultSchema;
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemoryCollectionTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemoryTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmbeddingsTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TagsTableName>k__BackingField;
    public string ConnectionString { get; public set; }
    public string Schema { get; public set; }
    public string MemoryCollectionTableName { get; public set; }
    public string MemoryTableName { get; public set; }
    public string EmbeddingsTableName { get; public set; }
    public string TagsTableName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public void set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public string get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(string value);
    [CompilerGeneratedAttribute]
public string get_MemoryCollectionTableName();
    [CompilerGeneratedAttribute]
public void set_MemoryCollectionTableName(string value);
    [CompilerGeneratedAttribute]
public string get_MemoryTableName();
    [CompilerGeneratedAttribute]
public void set_MemoryTableName(string value);
    [CompilerGeneratedAttribute]
public string get_EmbeddingsTableName();
    [CompilerGeneratedAttribute]
public void set_EmbeddingsTableName(string value);
    [CompilerGeneratedAttribute]
public string get_TagsTableName();
    [CompilerGeneratedAttribute]
public void set_TagsTableName(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory : object {
    private SqlServerConfig _config;
    private ITextEmbeddingGenerator _embeddingGenerator;
    private ILogger`1<SqlServerMemory> _log;
    private bool _isReady;
    private SemaphoreSlim _initSemaphore;
    private int _cachedServerVersion;
    private static Regex s_replaceIndexNameCharsRegex;
    private static string ValidSeparator;
    public SqlServerMemory(SqlServerConfig config, ITextEmbeddingGenerator embeddingGenerator, ILoggerFactory loggerFactory);
    private static SqlServerMemory();
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<CreateIndexAsync>d__7")]
public sealed virtual Task CreateIndexAsync(string index, int vectorSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<DeleteAsync>d__8")]
public sealed virtual Task DeleteAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<DeleteIndexAsync>d__9")]
public sealed virtual Task DeleteIndexAsync(string index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<GetIndexesAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<string>> GetIndexesAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<GetListAsync>d__11")]
public sealed virtual IAsyncEnumerable`1<MemoryRecord> GetListAsync(string index, ICollection`1<MemoryFilter> filters, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<GetSimilarListAsync>d__12")]
public sealed virtual IAsyncEnumerable`1<ValueTuple`2<MemoryRecord, double>> GetSimilarListAsync(string index, string text, ICollection`1<MemoryFilter> filters, double minRelevance, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<UpsertAsync>d__13")]
public sealed virtual Task`1<string> UpsertAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<UpsertBatchAsync>d__14")]
public sealed virtual IAsyncEnumerable`1<string> UpsertBatchAsync(string index, IEnumerable`1<MemoryRecord> records, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<InitAsync>d__18")]
private Task InitAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<CacheSqlServerMajorVersionNumberAsync>d__19")]
private Task CacheSqlServerMajorVersionNumberAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<CreateTablesIfNotExistsAsync>d__20")]
private Task CreateTablesIfNotExistsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<DoesIndexExistsAsync>d__21")]
private Task`1<bool> DoesIndexExistsAsync(string indexName, CancellationToken cancellationToken);
    private string GetFullTableName(string tableName);
    private string GenerateFilters(string index, SqlParameterCollection parameters, ICollection`1<MemoryFilter> filters);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemory/<ReadEntryAsync>d__24")]
private Task`1<MemoryRecord> ReadEntryAsync(SqlDataReader dataReader, bool withEmbedding, CancellationToken cancellationToken);
    private static string NormalizeIndexName(string index);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.SQLServer.SqlServerMemoryException : KernelMemoryException {
    public SqlServerMemoryException(string message);
    public SqlServerMemoryException(string message, Exception innerException);
}
