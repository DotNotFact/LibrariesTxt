[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[DataContractAttribute]
public class Silk.NET.Maths.Box2D`1 : ValueType {
    [DataMemberAttribute]
public Vector2D`1<T> Min;
    [DataMemberAttribute]
public Vector2D`1<T> Max;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Center { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Size { get; }
    public Box2D`1(Vector2D`1<T> min, Vector2D`1<T> max);
    public Box2D`1(Vector2D`1<T> min, T maxX, T maxY);
    public Box2D`1(T minX, T minY, Vector2D`1<T> max);
    public Box2D`1(T minX, T minY, T maxX, T maxY);
    public Vector2D`1<T> get_Center();
    public Vector2D`1<T> get_Size();
    public bool Contains(Vector2D`1<T> point);
    public bool Contains(Box2D`1<T> other);
    public T GetDistanceToNearestEdge(Vector2D`1<T> point);
    public Box2D`1<T> GetTranslated(Vector2D`1<T> distance);
    public Box2D`1<T> GetScaled(Vector2D`1<T> scale, Vector2D`1<T> anchor);
    public Box2D`1<T> GetScaled(Vector2D`1<TScale> scale, Vector2D`1<T> anchor);
    public Box2D`1<T> GetInflated(Vector2D`1<T> point);
    public sealed virtual bool Equals(Box2D`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Box2D`1<T> value1, Box2D`1<T> value2);
    public static bool op_Inequality(Box2D`1<T> value1, Box2D`1<T> value2);
    public Box2D`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Box3D`1 : ValueType {
    [DataMemberAttribute]
public Vector3D`1<T> Min;
    [DataMemberAttribute]
public Vector3D`1<T> Max;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Center { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Size { get; }
    public Box3D`1(Vector3D`1<T> min, Vector3D`1<T> max);
    public Box3D`1(Vector3D`1<T> min, T maxX, T maxY, T maxZ);
    public Box3D`1(T minX, T minY, T minZ, Vector3D`1<T> max);
    public Box3D`1(T minX, T minY, T minZ, T maxX, T maxY, T maxZ);
    public Vector3D`1<T> get_Center();
    public Vector3D`1<T> get_Size();
    public bool Contains(Vector3D`1<T> point);
    public bool Contains(Box3D`1<T> other);
    public T GetDistanceToNearestEdge(Vector3D`1<T> point);
    public Box3D`1<T> GetTranslated(Vector3D`1<T> distance);
    public Box3D`1<T> GetScaled(Vector3D`1<T> scale, Vector3D`1<T> anchor);
    public Box3D`1<T> GetScaled(Vector3D`1<TScale> scale, Vector3D`1<T> anchor);
    public Box3D`1<T> GetInflated(Vector3D`1<T> point);
    public sealed virtual bool Equals(Box3D`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Box3D`1<T> value1, Box3D`1<T> value2);
    public static bool op_Inequality(Box3D`1<T> value1, Box3D`1<T> value2);
    public Box3D`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Circle`1 : ValueType {
    [DataMemberAttribute]
public Vector2D`1<T> Center;
    [DataMemberAttribute]
public T Radius;
    [IgnoreDataMemberAttribute]
public T Diameter { get; }
    [IgnoreDataMemberAttribute]
public T SquaredRadius { get; }
    [IgnoreDataMemberAttribute]
public T Circumference { get; }
    public Circle`1(Vector2D`1<T> center, T radius);
    public Circle`1(T centerX, T centerY, T radius);
    public T get_Diameter();
    public T get_SquaredRadius();
    public T get_Circumference();
    public bool Contains(Vector2D`1<T> point);
    public bool Contains(Circle`1<T> other);
    public T GetDistanceToNearestEdgeSquared(Vector2D`1<T> point);
    public T GetDistanceToNearestEdge(Vector2D`1<T> point);
    public Circle`1<T> GetTranslated(Vector2D`1<T> distance);
    public Circle`1<T> GetInflated(Vector2D`1<T> point);
    public sealed virtual bool Equals(Circle`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Circle`1<T> value1, Circle`1<T> value2);
    public static bool op_Inequality(Circle`1<T> value1, Circle`1<T> value2);
    public Circle`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Cube`1 : ValueType {
    [DataMemberAttribute]
public Vector3D`1<T> Origin;
    [DataMemberAttribute]
public Vector3D`1<T> Size;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Center { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Max { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> HalfSize { get; }
    public Cube`1(Vector3D`1<T> origin, Vector3D`1<T> size);
    public Cube`1(Vector3D`1<T> origin, T sizeX, T sizeY, T sizeZ);
    public Cube`1(T originX, T originY, T originZ, Vector3D`1<T> size);
    public Cube`1(T originX, T originY, T originZ, T sizeX, T sizeY, T sizeZ);
    public Vector3D`1<T> get_Center();
    public Vector3D`1<T> get_Max();
    public Vector3D`1<T> get_HalfSize();
    public bool Contains(Vector3D`1<T> point);
    public bool Contains(Cube`1<T> other);
    public T GetDistanceToNearestEdge(Vector3D`1<T> point);
    public Cube`1<T> GetTranslated(Vector3D`1<T> distance);
    public Cube`1<T> GetScaled(Vector3D`1<T> scale, Vector3D`1<T> anchor);
    public Cube`1<T> GetScaled(Vector3D`1<TScale> scale, Vector3D`1<T> anchor);
    public Cube`1<T> GetInflated(Vector3D`1<T> point);
    public sealed virtual bool Equals(Cube`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Cube`1<T> value1, Cube`1<T> value2);
    public static bool op_Inequality(Cube`1<T> value1, Cube`1<T> value2);
    public Cube`1<TOther> As();
}
public static class Silk.NET.Maths.Matrix2X2 : object {
    public static Matrix2X2`1<T> Add(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix3X2`1<T> Multiply(Matrix3X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X2`1<T> value1, T value2);
    public static Vector2D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> Negate(Matrix2X2`1<T> value);
    public static Matrix2X2`1<T> Subtract(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> Lerp(Matrix2X2`1<T> matrix1, Matrix2X2`1<T> matrix2, T amount);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix2X2`1 : ValueType {
    private static Matrix2X2`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column2 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    public Vector2D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix2X2`1<T> Identity { get; }
    public bool IsIdentity { get; }
    public Matrix2X2`1(T m11, T m12, T m21, T m22);
    public Matrix2X2`1(Vector2D`1<T> row1, Vector2D`1<T> row2);
    public Matrix2X2`1(Matrix3X2`1<T> value);
    public Matrix2X2`1(Matrix4X3`1<T> value);
    public Matrix2X2`1(Matrix3X4`1<T> value);
    public Matrix2X2`1(Matrix2X4`1<T> value);
    public Matrix2X2`1(Matrix4X2`1<T> value);
    private static Matrix2X2`1();
    public Vector2D`1<T> get_Column1();
    public Vector2D`1<T> get_Column2();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    public Vector2D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix2X2`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix2X2`1<T> op_Addition(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static bool op_Equality(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static bool op_Inequality(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> op_Multiply(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Vector2D`1<T> op_Multiply(Vector2D`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> op_Multiply(Matrix2X2`1<T> value1, T value2);
    public static Matrix2X2`1<T> op_Subtraction(Matrix2X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix2X2`1<T> op_UnaryNegation(Matrix2X2`1<T> value);
    [IsReadOnlyAttribute]
public T GetDeterminant();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix2X2`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix2X2`1<Half> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<float> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<double> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<decimal> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<sbyte> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<byte> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<ushort> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<short> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<UInt32> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<int> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<ulong> op_Explicit(Matrix2X2`1<T> from);
    public static Matrix2X2`1<long> op_Explicit(Matrix2X2`1<T> from);
    public Matrix2X2`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|20_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|20_1();
}
public static class Silk.NET.Maths.Matrix2X3 : object {
    private static float BillboardEpsilon;
    public static Matrix2X3`1<T> Add(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> CreateBillboard(Vector3D`1<T> objectPosition, Vector3D`1<T> cameraPosition, Vector3D`1<T> cameraUpVector, Vector3D`1<T> cameraForwardVector);
    public static Matrix2X3`1<T> CreateFromAxisAngle(Vector3D`1<T> axis, T angle);
    public static Matrix2X3`1<T> CreateFromQuaternion(Quaternion`1<T> quaternion);
    public static Matrix2X3`1<T> CreateFromYawPitchRoll(T yaw, T pitch, T roll);
    public static Matrix2X3`1<T> Multiply(Matrix2X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X3`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X3`1<T> value1, T value2);
    public static Vector3D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> Negate(Matrix2X3`1<T> value);
    public static Matrix2X3`1<T> Subtract(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> Lerp(Matrix2X3`1<T> matrix1, Matrix2X3`1<T> matrix2, T amount);
    public static Matrix2X3`1<T> Transform(Matrix2X3`1<T> value, Quaternion`1<T> rotation);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix2X3`1 : ValueType {
    private static Matrix2X3`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column3 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    public Vector3D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix2X3`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix2X3`1(T m11, T m12, T m13, T m21, T m22, T m23);
    public Matrix2X3`1(Vector3D`1<T> row1, Vector3D`1<T> row2);
    public Matrix2X3`1(Matrix3X2`1<T> value);
    public Matrix2X3`1(Matrix4X3`1<T> value);
    public Matrix2X3`1(Matrix3X4`1<T> value);
    public Matrix2X3`1(Matrix2X4`1<T> value);
    public Matrix2X3`1(Matrix4X2`1<T> value);
    private static Matrix2X3`1();
    public Vector2D`1<T> get_Column1();
    public Vector2D`1<T> get_Column2();
    public Vector2D`1<T> get_Column3();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    public Vector3D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix2X3`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix2X3`1<T> op_Addition(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static bool op_Equality(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static bool op_Inequality(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> op_Multiply(Matrix2X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Vector3D`1<T> op_Multiply(Vector2D`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> op_Multiply(Matrix2X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X2`1<T> op_Multiply(Matrix2X3`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix2X3`1<T> op_Multiply(Matrix2X3`1<T> value1, T value2);
    public static Matrix2X3`1<T> op_Subtraction(Matrix2X3`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X3`1<T> op_UnaryNegation(Matrix2X3`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix2X3`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix2X3`1<Half> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<float> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<double> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<decimal> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<sbyte> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<byte> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<ushort> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<short> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<UInt32> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<int> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<ulong> op_Explicit(Matrix2X3`1<T> from);
    public static Matrix2X3`1<long> op_Explicit(Matrix2X3`1<T> from);
    public Matrix2X3`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|28_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|28_1();
}
public static class Silk.NET.Maths.Matrix2X4 : object {
    public static Matrix2X4`1<T> Add(Matrix2X4`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> Multiply(Matrix2X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X4`1<T> Multiply(Matrix4X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix3X4`1<T> Multiply(Matrix3X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> Multiply(Matrix2X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Vector4D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> Lerp(Matrix2X4`1<T> matrix1, Matrix2X4`1<T> matrix2, T amount);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix2X4`1 : ValueType {
    private static Matrix2X4`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column3 { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Column4 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M14 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    [DataMemberAttribute]
public T M24 { get; public set; }
    public Vector4D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix2X4`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix2X4`1(Vector4D`1<T> row1, Vector4D`1<T> row2);
    public Matrix2X4`1(T m11, T m12, T m13, T m14, T m21, T m22, T m23, T m24);
    public Matrix2X4`1(Matrix3X2`1<T> value);
    public Matrix2X4`1(Matrix4X3`1<T> value);
    public Matrix2X4`1(Matrix3X4`1<T> value);
    public Matrix2X4`1(Matrix3X3`1<T> value);
    public Matrix2X4`1(Matrix4X2`1<T> value);
    private static Matrix2X4`1();
    public Vector2D`1<T> get_Column1();
    public Vector2D`1<T> get_Column2();
    public Vector2D`1<T> get_Column3();
    public Vector2D`1<T> get_Column4();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M14();
    public void set_M14(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    [IsReadOnlyAttribute]
public T get_M24();
    public void set_M24(T value);
    public Vector4D`1<T> get_Item(int x);
    public T get_Item(int x, int j);
    public static Matrix2X4`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix2X4`1<T> op_Addition(Matrix2X4`1<T> value1, Matrix2X4`1<T> value2);
    public static bool op_Equality(Matrix2X4`1<T> value1, Matrix2X4`1<T> value2);
    public static bool op_Inequality(Matrix2X4`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> op_Multiply(Matrix2X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Vector4D`1<T> op_Multiply(Vector2D`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X3`1<T> op_Multiply(Matrix2X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix3X4`1<T> op_Multiply(Matrix3X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> op_Multiply(Matrix2X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> op_Multiply(Matrix2X4`1<T> value1, T value2);
    public static Matrix2X4`1<T> op_Subtraction(Matrix2X4`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X4`1<T> op_UnaryNegation(Matrix2X4`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix2X4`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix2X4`1<Half> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<float> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<double> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<decimal> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<sbyte> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<byte> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<ushort> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<short> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<UInt32> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<int> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<ulong> op_Explicit(Matrix2X4`1<T> from);
    public static Matrix2X4`1<long> op_Explicit(Matrix2X4`1<T> from);
    public Matrix2X4`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|36_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|36_1();
}
public static class Silk.NET.Maths.Matrix3X2 : object {
    private static float RotationEpsilon;
    public static Matrix3X2`1<T> Add(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X2`1<T> CreateRotation(T radians);
    public static Matrix3X2`1<T> CreateRotation(T radians, Vector2D`1<T> centerPoint);
    public static Matrix3X2`1<T> CreateScale(Vector2D`1<T> scales);
    public static Matrix3X2`1<T> CreateScale(T xScale, T yScale);
    public static Matrix3X2`1<T> CreateScale(T xScale, T yScale, Vector2D`1<T> centerPoint);
    public static Matrix3X2`1<T> CreateScale(Vector2D`1<T> scales, Vector2D`1<T> centerPoint);
    public static Matrix3X2`1<T> CreateScale(T scale);
    public static Matrix3X2`1<T> CreateScale(T scale, Vector2D`1<T> centerPoint);
    public static Matrix3X2`1<T> CreateSkew(T radiansX, T radiansY);
    public static Matrix3X2`1<T> CreateSkew(T radiansX, T radiansY, Vector2D`1<T> centerPoint);
    public static Matrix3X2`1<T> CreateTranslation(Vector2D`1<T> position);
    public static Matrix3X2`1<T> CreateTranslation(T xPosition, T yPosition);
    public static bool Invert(Matrix3X2`1<T> matrix, Matrix3X2`1& result);
    public static Matrix3X2`1<T> Lerp(Matrix3X2`1<T> matrix1, Matrix3X2`1<T> matrix2, T amount);
    public static Matrix3X2`1<T> Multiply(Matrix3X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X3`1<T> Multiply(Matrix3X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X3`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X2`1<T> Multiply(Matrix3X2`1<T> value1, T value2);
    public static Matrix3X2`1<T> Negate(Matrix3X2`1<T> value);
    public static Matrix3X2`1<T> Subtract(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix3X2`1 : ValueType {
    private static Matrix3X2`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column2 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    public Vector2D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix3X2`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix3X2`1(T m11, T m12, T m21, T m22, T m31, T m32);
    public Matrix3X2`1(Vector2D`1<T> row1, Vector2D`1<T> row2, Vector2D`1<T> row3);
    public Matrix3X2`1(Matrix4X3`1<T> value);
    public Matrix3X2`1(Matrix3X4`1<T> value);
    public Matrix3X2`1(Matrix3X3`1<T> value);
    public Matrix3X2`1(Matrix2X4`1<T> value);
    public Matrix3X2`1(Matrix4X2`1<T> value);
    private static Matrix3X2`1();
    public Vector3D`1<T> get_Column1();
    public Vector3D`1<T> get_Column2();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    public Vector2D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix3X2`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix3X2`1<T> op_Addition(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
    public static bool op_Equality(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
    public static bool op_Inequality(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X3`1<T> op_Multiply(Matrix3X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Vector2D`1<T> op_Multiply(Vector3D`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X2`1<T> op_Multiply(Matrix3X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix3X2`1<T> op_Multiply(Matrix3X3`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X2`1<T> op_Multiply(Matrix3X2`1<T> value1, T value2);
    public static Matrix3X2`1<T> op_Subtraction(Matrix3X2`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix3X2`1<T> op_UnaryNegation(Matrix3X2`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix3X2`1<T> other);
    [IsReadOnlyAttribute]
public T GetDeterminant();
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix3X2`1<Half> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<float> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3x2 op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<double> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<decimal> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<sbyte> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<byte> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<ushort> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<short> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<UInt32> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<int> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<ulong> op_Explicit(Matrix3X2`1<T> from);
    public static Matrix3X2`1<long> op_Explicit(Matrix3X2`1<T> from);
    public Matrix3X2`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|27_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|27_1();
}
public static class Silk.NET.Maths.Matrix3X3 : object {
    private static float BillboardEpsilon;
    private static float DecomposeEpsilon;
    public static Matrix3X3`1<T> Add(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X3`1<T> CreateBillboard(Vector3D`1<T> objectPosition, Vector3D`1<T> cameraPosition, Vector3D`1<T> cameraUpVector, Vector3D`1<T> cameraForwardVector);
    public static Matrix3X3`1<T> CreateFromAxisAngle(Vector3D`1<T> axis, T angle);
    public static Matrix3X3`1<T> CreateFromQuaternion(Quaternion`1<T> quaternion);
    public static Matrix3X3`1<T> CreateFromYawPitchRoll(T yaw, T pitch, T roll);
    public static Matrix3X3`1<T> CreateRotationX(T radians);
    public static Matrix3X3`1<T> CreateRotationY(T radians);
    public static Matrix3X3`1<T> CreateRotationZ(T radians);
    public static Matrix3X3`1<T> CreateScale(T xScale, T yScale, T zScale);
    public static Matrix3X3`1<T> CreateScale(Vector3D`1<T> scales);
    public static Matrix3X3`1<T> CreateScale(T scale);
    public static Matrix3X3`1<T> Multiply(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix2X3`1<T> Multiply(Matrix2X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X2`1<T> Multiply(Matrix3X3`1<T> value1, Matrix3X2`1<T> value2);
    public static Matrix4X3`1<T> Multiply(Matrix4X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X4`1<T> Multiply(Matrix3X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X3`1<T> Multiply(Matrix3X3`1<T> value1, T value2);
    public static Vector3D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X3`1<T> Negate(Matrix3X3`1<T> value);
    public static Matrix3X3`1<T> Subtract(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static bool Decompose(Matrix3X3`1<T> matrix, Vector3D`1& scale, Quaternion`1& rotation);
    public static Matrix3X3`1<T> Lerp(Matrix3X3`1<T> matrix1, Matrix3X3`1<T> matrix2, T amount);
    public static Matrix3X3`1<T> Transform(Matrix3X3`1<T> value, Quaternion`1<T> rotation);
    public static Matrix3X3`1<T> Transpose(Matrix3X3`1<T> matrix);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix3X3`1 : ValueType {
    private static Matrix3X3`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column3 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    [DataMemberAttribute]
public T M33 { get; public set; }
    public Vector3D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix3X3`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix3X3`1(Vector3D`1<T> row1, Vector3D`1<T> row2, Vector3D`1<T> row3);
    public Matrix3X3`1(T m11, T m12, T m13, T m21, T m22, T m23, T m31, T m32, T m33);
    public Matrix3X3`1(Matrix3X2`1<T> value);
    public Matrix3X3`1(Matrix4X3`1<T> value);
    public Matrix3X3`1(Matrix3X4`1<T> value);
    public Matrix3X3`1(Matrix3X3`1<T> value);
    public Matrix3X3`1(Matrix2X4`1<T> value);
    public Matrix3X3`1(Matrix4X2`1<T> value);
    public Matrix3X3`1(Matrix4X4`1<T> value);
    private static Matrix3X3`1();
    public Vector3D`1<T> get_Column1();
    public Vector3D`1<T> get_Column2();
    public Vector3D`1<T> get_Column3();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    [IsReadOnlyAttribute]
public T get_M33();
    public void set_M33(T value);
    public Vector3D`1<T> get_Item(int x);
    public T get_Item(int x, int i);
    public static Matrix3X3`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix3X3`1<T> op_Addition(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static bool op_Equality(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static bool op_Inequality(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X3`1<T> op_Multiply(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Vector3D`1<T> op_Multiply(Vector3D`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X3`1<T> op_Multiply(Matrix3X3`1<T> value1, T value2);
    public static Matrix3X3`1<T> op_Subtraction(Matrix3X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix3X3`1<T> op_UnaryNegation(Matrix3X3`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix3X3`1<T> other);
    [IsReadOnlyAttribute]
public T GetDeterminant();
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix3X3`1<Half> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<float> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<double> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<decimal> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<sbyte> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<byte> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<ushort> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<short> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<UInt32> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<int> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<ulong> op_Explicit(Matrix3X3`1<T> from);
    public static Matrix3X3`1<long> op_Explicit(Matrix3X3`1<T> from);
    public Matrix3X3`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|38_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|38_1();
}
public static class Silk.NET.Maths.Matrix3X4 : object {
    public static Matrix3X4`1<T> Add(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X3`1<T> Multiply(Matrix3X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix3X4`1<T> Multiply(Matrix3X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix3X4`1<T> Multiply(Matrix3X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix4X4`1<T> Multiply(Matrix4X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> Multiply(Matrix3X4`1<T> value1, T value2);
    public static Vector4D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> Negate(Matrix3X4`1<T> value);
    public static Matrix3X4`1<T> Subtract(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> Lerp(Matrix3X4`1<T> matrix1, Matrix3X4`1<T> matrix2, T amount);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix3X4`1 : ValueType {
    private static Matrix3X4`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column3 { get; }
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Column4 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M14 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    [DataMemberAttribute]
public T M24 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    [DataMemberAttribute]
public T M33 { get; public set; }
    [DataMemberAttribute]
public T M34 { get; public set; }
    public Vector4D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix3X4`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix3X4`1(Vector4D`1<T> row1, Vector4D`1<T> row2, Vector4D`1<T> row3);
    public Matrix3X4`1(T m11, T m12, T m13, T m14, T m21, T m22, T m23, T m24, T m31, T m32, T m33, T m34);
    public Matrix3X4`1(Matrix3X2`1<T> value);
    public Matrix3X4`1(Matrix4X3`1<T> value);
    public Matrix3X4`1(Matrix3X4`1<T> value);
    public Matrix3X4`1(Matrix3X3`1<T> value);
    public Matrix3X4`1(Matrix2X4`1<T> value);
    public Matrix3X4`1(Matrix4X2`1<T> value);
    private static Matrix3X4`1();
    public Vector3D`1<T> get_Column1();
    public Vector3D`1<T> get_Column2();
    public Vector3D`1<T> get_Column3();
    public Vector3D`1<T> get_Column4();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M14();
    public void set_M14(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    [IsReadOnlyAttribute]
public T get_M24();
    public void set_M24(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    [IsReadOnlyAttribute]
public T get_M33();
    public void set_M33(T value);
    [IsReadOnlyAttribute]
public T get_M34();
    public void set_M34(T value);
    public Vector4D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix3X4`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix3X4`1<T> op_Addition(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static bool op_Equality(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static bool op_Inequality(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X3`1<T> op_Multiply(Matrix3X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Vector4D`1<T> op_Multiply(Vector3D`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> op_Multiply(Matrix3X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> op_Multiply(Matrix3X4`1<T> value1, T value2);
    public static Matrix3X4`1<T> op_Subtraction(Matrix3X4`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix3X4`1<T> op_UnaryNegation(Matrix3X4`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix3X4`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix3X4`1<Half> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<float> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<double> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<decimal> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<sbyte> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<byte> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<ushort> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<short> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<UInt32> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<int> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<ulong> op_Explicit(Matrix3X4`1<T> from);
    public static Matrix3X4`1<long> op_Explicit(Matrix3X4`1<T> from);
    public Matrix3X4`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|49_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|49_1();
}
public static class Silk.NET.Maths.Matrix4X2 : object {
    public static Matrix4X2`1<T> Add(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> Multiply(Matrix4X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix4X3`1<T> Multiply(Matrix4X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix4X4`1<T> Multiply(Matrix4X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X2`1<T> Multiply(Matrix2X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix3X2`1<T> Multiply(Matrix3X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> Multiply(Matrix4X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> Negate(Matrix4X2`1<T> value);
    public static Matrix4X2`1<T> Subtract(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> Lerp(Matrix4X2`1<T> matrix1, Matrix4X2`1<T> matrix2, T amount);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix4X2`1 : ValueType {
    private static Matrix4X2`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Row4;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column2 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    [DataMemberAttribute]
public T M41 { get; public set; }
    [DataMemberAttribute]
public T M42 { get; public set; }
    public Vector2D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix4X2`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix4X2`1(Vector2D`1<T> row1, Vector2D`1<T> row2, Vector2D`1<T> row3, Vector2D`1<T> row4);
    public Matrix4X2`1(T m11, T m12, T m21, T m22, T m31, T m32, T m41, T m42);
    public Matrix4X2`1(Matrix3X2`1<T> value);
    public Matrix4X2`1(Matrix4X3`1<T> value);
    public Matrix4X2`1(Matrix3X4`1<T> value);
    public Matrix4X2`1(Matrix3X3`1<T> value);
    public Matrix4X2`1(Matrix2X4`1<T> value);
    private static Matrix4X2`1();
    public Vector4D`1<T> get_Column1();
    public Vector4D`1<T> get_Column2();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    [IsReadOnlyAttribute]
public T get_M41();
    public void set_M41(T value);
    [IsReadOnlyAttribute]
public T get_M42();
    public void set_M42(T value);
    public Vector2D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix4X2`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix4X2`1<T> op_Addition(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static bool op_Equality(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static bool op_Inequality(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> op_Multiply(Matrix4X2`1<T> value1, Matrix2X2`1<T> value2);
    public static Matrix4X3`1<T> op_Multiply(Matrix4X2`1<T> value1, Matrix2X3`1<T> value2);
    public static Matrix4X4`1<T> op_Multiply(Matrix4X2`1<T> value1, Matrix2X4`1<T> value2);
    public static Matrix2X2`1<T> op_Multiply(Matrix2X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix3X2`1<T> op_Multiply(Matrix3X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> op_Multiply(Matrix4X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Vector2D`1<T> op_Multiply(Vector4D`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> op_Multiply(Matrix4X2`1<T> value1, T value2);
    public static Matrix4X2`1<T> op_Subtraction(Matrix4X2`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X2`1<T> op_UnaryNegation(Matrix4X2`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix4X2`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix4X2`1<Half> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<float> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<double> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<decimal> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<sbyte> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<byte> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<ushort> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<short> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<UInt32> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<int> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<ulong> op_Explicit(Matrix4X2`1<T> from);
    public static Matrix4X2`1<long> op_Explicit(Matrix4X2`1<T> from);
    public Matrix4X2`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|34_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|34_1();
}
public static class Silk.NET.Maths.Matrix4X3 : object {
    public static Matrix4X3`1<T> Add(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> Multiply(Matrix4X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Matrix4X4`1<T> Multiply(Matrix4X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix4X3`1<T> Multiply(Matrix4X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix3X3`1<T> Multiply(Matrix3X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> Multiply(Matrix4X3`1<T> value1, T value2);
    public static Vector3D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> Negate(Matrix4X3`1<T> value);
    public static Matrix4X3`1<T> Subtract(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> Lerp(Matrix4X3`1<T> matrix1, Matrix4X3`1<T> matrix2, T amount);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix4X3`1 : ValueType {
    private static Matrix4X3`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector3D`1<T> Row4;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column3 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    [DataMemberAttribute]
public T M33 { get; public set; }
    [DataMemberAttribute]
public T M41 { get; public set; }
    [DataMemberAttribute]
public T M42 { get; public set; }
    [DataMemberAttribute]
public T M43 { get; public set; }
    public Vector3D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix4X3`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix4X3`1(Vector3D`1<T> row1, Vector3D`1<T> row2, Vector3D`1<T> row3, Vector3D`1<T> row4);
    public Matrix4X3`1(T m11, T m12, T m13, T m21, T m22, T m23, T m31, T m32, T m33, T m41, T m42, T m43);
    public Matrix4X3`1(Matrix3X2`1<T> value);
    public Matrix4X3`1(Matrix4X3`1<T> value);
    public Matrix4X3`1(Matrix3X4`1<T> value);
    public Matrix4X3`1(Matrix3X3`1<T> value);
    public Matrix4X3`1(Matrix2X4`1<T> value);
    public Matrix4X3`1(Matrix4X2`1<T> value);
    public Matrix4X3`1(Matrix4X4`1<T> value);
    private static Matrix4X3`1();
    public Vector4D`1<T> get_Column1();
    public Vector4D`1<T> get_Column2();
    public Vector4D`1<T> get_Column3();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    [IsReadOnlyAttribute]
public T get_M33();
    public void set_M33(T value);
    [IsReadOnlyAttribute]
public T get_M41();
    public void set_M41(T value);
    [IsReadOnlyAttribute]
public T get_M42();
    public void set_M42(T value);
    [IsReadOnlyAttribute]
public T get_M43();
    public void set_M43(T value);
    public Vector3D`1<T> get_Item(int x);
    public T get_Item(int x, int i);
    public static Matrix4X3`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix4X3`1<T> op_Addition(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static bool op_Equality(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static bool op_Inequality(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X4`1<T> op_Multiply(Matrix4X3`1<T> value1, Matrix3X4`1<T> value2);
    public static Matrix4X3`1<T> op_Multiply(Matrix4X3`1<T> value1, Matrix3X3`1<T> value2);
    public static Vector3D`1<T> op_Multiply(Vector4D`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> op_Multiply(Matrix4X3`1<T> value1, T value2);
    public static Matrix4X3`1<T> op_Subtraction(Matrix4X3`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X3`1<T> op_UnaryNegation(Matrix4X3`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix4X3`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix4X3`1<Half> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<float> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<double> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<decimal> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<sbyte> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<byte> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<ushort> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<short> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<UInt32> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<int> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<ulong> op_Explicit(Matrix4X3`1<T> from);
    public static Matrix4X3`1<long> op_Explicit(Matrix4X3`1<T> from);
    public Matrix4X3`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|48_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|48_1();
}
public static class Silk.NET.Maths.Matrix4X4 : object {
    private static float BillboardEpsilon;
    private static float BillboardMinAngle;
    private static float DecomposeEpsilon;
    public static Matrix4X4`1<T> Add(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix4X4`1<T> CreateBillboard(Vector3D`1<T> objectPosition, Vector3D`1<T> cameraPosition, Vector3D`1<T> cameraUpVector, Vector3D`1<T> cameraForwardVector);
    public static Matrix4X4`1<T> CreateConstrainedBillboard(Vector3D`1<T> objectPosition, Vector3D`1<T> cameraPosition, Vector3D`1<T> rotateAxis, Vector3D`1<T> cameraForwardVector, Vector3D`1<T> objectForwardVector);
    public static Matrix4X4`1<T> CreateFromAxisAngle(Vector3D`1<T> axis, T angle);
    public static Matrix4X4`1<T> CreateFromQuaternion(Quaternion`1<T> quaternion);
    public static Matrix4X4`1<T> CreateFromYawPitchRoll(T yaw, T pitch, T roll);
    public static Matrix4X4`1<T> CreateLookAt(Vector3D`1<T> cameraPosition, Vector3D`1<T> cameraTarget, Vector3D`1<T> cameraUpVector);
    public static Matrix4X4`1<T> CreateOrthographic(T width, T height, T zNearPlane, T zFarPlane);
    public static Matrix4X4`1<T> CreateOrthographicOffCenter(T left, T right, T bottom, T top, T zNearPlane, T zFarPlane);
    public static Matrix4X4`1<T> CreatePerspective(T width, T height, T nearPlaneDistance, T farPlaneDistance);
    public static Matrix4X4`1<T> CreatePerspectiveFieldOfView(T fieldOfView, T aspectRatio, T nearPlaneDistance, T farPlaneDistance);
    public static Matrix4X4`1<T> CreatePerspectiveOffCenter(T left, T right, T bottom, T top, T nearPlaneDistance, T farPlaneDistance);
    public static Matrix4X4`1<T> CreateReflection(Plane`1<T> value);
    public static Matrix4X4`1<T> CreateRotationX(T radians);
    public static Matrix4X4`1<T> CreateRotationX(T radians, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateRotationY(T radians);
    public static Matrix4X4`1<T> CreateRotationY(T radians, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateRotationZ(T radians);
    public static Matrix4X4`1<T> CreateRotationZ(T radians, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateScale(T xScale, T yScale, T zScale);
    public static Matrix4X4`1<T> CreateScale(T xScale, T yScale, T zScale, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateScale(Vector3D`1<T> scales);
    public static Matrix4X4`1<T> CreateScale(Vector3D`1<T> scales, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateScale(T scale);
    public static Matrix4X4`1<T> CreateScale(T scale, Vector3D`1<T> centerPoint);
    public static Matrix4X4`1<T> CreateShadow(Vector3D`1<T> lightDirection, Plane`1<T> plane);
    public static Matrix4X4`1<T> CreateTranslation(Vector3D`1<T> position);
    public static Matrix4X4`1<T> CreateTranslation(T xPosition, T yPosition, T zPosition);
    public static Matrix4X4`1<T> CreateWorld(Vector3D`1<T> position, Vector3D`1<T> forward, Vector3D`1<T> up);
    public static bool Invert(Matrix4X4`1<T> matrix, Matrix4X4`1& result);
    public static Matrix4X4`1<T> Multiply(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Vector4D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix2X4`1<T> Multiply(Matrix2X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix4X2`1<T> Multiply(Matrix4X4`1<T> value1, Matrix4X2`1<T> value2);
    public static Matrix4X4`1<T> Multiply(Matrix4X4`1<T> value1, T value2);
    public static Matrix4X4`1<T> Negate(Matrix4X4`1<T> value);
    public static Matrix4X4`1<T> Subtract(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static bool Decompose(Matrix4X4`1<T> matrix, Vector3D`1& scale, Quaternion`1& rotation, Vector3D`1& translation);
    public static Matrix4X4`1<T> Lerp(Matrix4X4`1<T> matrix1, Matrix4X4`1<T> matrix2, T amount);
    public static Matrix4X4`1<T> Transform(Matrix4X4`1<T> value, Quaternion`1<T> rotation);
    public static Matrix4X4`1<T> Transpose(Matrix4X4`1<T> matrix);
    [CompilerGeneratedAttribute]
internal static bool <Invert>g__SoftwareFallback|34_0(Matrix4X4`1<T> matrix, Matrix4X4`1& result);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Matrix4X4`1 : ValueType {
    private static Matrix4X4`1<T> _identity;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row1;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row2;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row3;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Row4;
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column1 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column2 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column3 { get; }
    [IgnoreDataMemberAttribute]
public Vector4D`1<T> Column4 { get; }
    [DataMemberAttribute]
public T M11 { get; public set; }
    [DataMemberAttribute]
public T M12 { get; public set; }
    [DataMemberAttribute]
public T M13 { get; public set; }
    [DataMemberAttribute]
public T M14 { get; public set; }
    [DataMemberAttribute]
public T M21 { get; public set; }
    [DataMemberAttribute]
public T M22 { get; public set; }
    [DataMemberAttribute]
public T M23 { get; public set; }
    [DataMemberAttribute]
public T M24 { get; public set; }
    [DataMemberAttribute]
public T M31 { get; public set; }
    [DataMemberAttribute]
public T M32 { get; public set; }
    [DataMemberAttribute]
public T M33 { get; public set; }
    [DataMemberAttribute]
public T M34 { get; public set; }
    [DataMemberAttribute]
public T M41 { get; public set; }
    [DataMemberAttribute]
public T M42 { get; public set; }
    [DataMemberAttribute]
public T M43 { get; public set; }
    [DataMemberAttribute]
public T M44 { get; public set; }
    public Vector4D`1<T> Item { get; }
    public T Item { get; }
    public static Matrix4X4`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Matrix4X4`1(Vector4D`1<T> row1, Vector4D`1<T> row2, Vector4D`1<T> row3, Vector4D`1<T> row4);
    public Matrix4X4`1(T m11, T m12, T m13, T m14, T m21, T m22, T m23, T m24, T m31, T m32, T m33, T m34, T m41, T m42, T m43, T m44);
    public Matrix4X4`1(Matrix3X2`1<T> value);
    public Matrix4X4`1(Matrix4X3`1<T> value);
    public Matrix4X4`1(Matrix3X4`1<T> value);
    public Matrix4X4`1(Matrix3X3`1<T> value);
    public Matrix4X4`1(Matrix2X4`1<T> value);
    public Matrix4X4`1(Matrix4X2`1<T> value);
    private static Matrix4X4`1();
    public Vector4D`1<T> get_Column1();
    public Vector4D`1<T> get_Column2();
    public Vector4D`1<T> get_Column3();
    public Vector4D`1<T> get_Column4();
    [IsReadOnlyAttribute]
public T get_M11();
    public void set_M11(T value);
    [IsReadOnlyAttribute]
public T get_M12();
    public void set_M12(T value);
    [IsReadOnlyAttribute]
public T get_M13();
    public void set_M13(T value);
    [IsReadOnlyAttribute]
public T get_M14();
    public void set_M14(T value);
    [IsReadOnlyAttribute]
public T get_M21();
    public void set_M21(T value);
    [IsReadOnlyAttribute]
public T get_M22();
    public void set_M22(T value);
    [IsReadOnlyAttribute]
public T get_M23();
    public void set_M23(T value);
    [IsReadOnlyAttribute]
public T get_M24();
    public void set_M24(T value);
    [IsReadOnlyAttribute]
public T get_M31();
    public void set_M31(T value);
    [IsReadOnlyAttribute]
public T get_M32();
    public void set_M32(T value);
    [IsReadOnlyAttribute]
public T get_M33();
    public void set_M33(T value);
    [IsReadOnlyAttribute]
public T get_M34();
    public void set_M34(T value);
    [IsReadOnlyAttribute]
public T get_M41();
    public void set_M41(T value);
    [IsReadOnlyAttribute]
public T get_M42();
    public void set_M42(T value);
    [IsReadOnlyAttribute]
public T get_M43();
    public void set_M43(T value);
    [IsReadOnlyAttribute]
public T get_M44();
    public void set_M44(T value);
    public Vector4D`1<T> get_Item(int x);
    public T get_Item(int x, int y);
    public static Matrix4X4`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Matrix4X4`1<T> op_Addition(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static bool op_Equality(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static bool op_Inequality(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix4X4`1<T> op_Multiply(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Vector4D`1<T> op_Multiply(Vector4D`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix3X4`1<T> op_Multiply(Matrix3X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix4X3`1<T> op_Multiply(Matrix4X4`1<T> value1, Matrix4X3`1<T> value2);
    public static Matrix4X4`1<T> op_Multiply(Matrix4X4`1<T> value1, T value2);
    public static Matrix4X4`1<T> op_Subtraction(Matrix4X4`1<T> value1, Matrix4X4`1<T> value2);
    public static Matrix4X4`1<T> op_UnaryNegation(Matrix4X4`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Matrix4X4`1<T> other);
    [IsReadOnlyAttribute]
public T GetDeterminant();
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Matrix4X4`1<Half> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<float> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<double> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<decimal> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<sbyte> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<byte> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<ushort> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<short> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<UInt32> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<int> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<ulong> op_Explicit(Matrix4X4`1<T> from);
    public static Matrix4X4`1<long> op_Explicit(Matrix4X4`1<T> from);
    public Matrix4X4`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|62_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|62_1();
}
public static class Silk.NET.Maths.Plane : object {
    private static float NormalizeEpsilon;
    public static Plane`1<T> CreateFromVertices(Vector3D`1<T> point1, Vector3D`1<T> point2, Vector3D`1<T> point3);
    public static T Dot(Plane`1<T> plane, Vector4D`1<T> value);
    public static T DotCoordinate(Plane`1<T> plane, Vector3D`1<T> value);
    public static T DotNormal(Plane`1<T> plane, Vector3D`1<T> value);
    public static Plane`1<T> Normalize(Plane`1<T> value);
    public static Plane`1<T> Transform(Plane`1<T> plane, Matrix4X4`1<T> matrix);
    public static Plane`1<T> Transform(Plane`1<T> plane, Quaternion`1<T> rotation);
}
[DataContractAttribute]
public class Silk.NET.Maths.Plane`1 : ValueType {
    [DataMemberAttribute]
public Vector3D`1<T> Normal;
    [DataMemberAttribute]
public T Distance;
    public Plane`1(T x, T y, T z, T distance);
    public Plane`1(Vector3D`1<T> normal, T distance);
    public Plane`1(Vector4D`1<T> value);
    public static bool op_Equality(Plane`1<T> value1, Plane`1<T> value2);
    public static bool op_Inequality(Plane`1<T> value1, Plane`1<T> value2);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Plane`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Plane`1<Half> op_Explicit(Plane`1<T> from);
    public static Plane`1<float> op_Explicit(Plane`1<T> from);
    public static Plane op_Explicit(Plane`1<T> from);
    public static Plane`1<double> op_Explicit(Plane`1<T> from);
    public static Plane`1<decimal> op_Explicit(Plane`1<T> from);
    public static Plane`1<sbyte> op_Explicit(Plane`1<T> from);
    public static Plane`1<byte> op_Explicit(Plane`1<T> from);
    public static Plane`1<ushort> op_Explicit(Plane`1<T> from);
    public static Plane`1<short> op_Explicit(Plane`1<T> from);
    public static Plane`1<UInt32> op_Explicit(Plane`1<T> from);
    public static Plane`1<int> op_Explicit(Plane`1<T> from);
    public static Plane`1<ulong> op_Explicit(Plane`1<T> from);
    public static Plane`1<long> op_Explicit(Plane`1<T> from);
    public Plane`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Quaternion`1 : ValueType {
    private static float SlerpEpsilon;
    [DataMemberAttribute]
public T X;
    [DataMemberAttribute]
public T Y;
    [DataMemberAttribute]
public T Z;
    [DataMemberAttribute]
public T W;
    public static Quaternion`1<T> Identity { get; }
    [IgnoreDataMemberAttribute]
public bool IsIdentity { get; }
    public Quaternion`1(T x, T y, T z, T w);
    public Quaternion`1(Vector3D`1<T> vectorPart, T scalarPart);
    public static Quaternion`1<T> get_Identity();
    [IsReadOnlyAttribute]
public bool get_IsIdentity();
    public static Quaternion`1<T> op_Addition(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> op_Division(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static bool op_Equality(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static bool op_Inequality(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> op_Multiply(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> op_Multiply(Quaternion`1<T> value1, T value2);
    public static Quaternion`1<T> op_Subtraction(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> op_UnaryNegation(Quaternion`1<T> value);
    public static Quaternion`1<T> Add(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> Concatenate(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> Conjugate(Quaternion`1<T> value);
    public static Quaternion`1<T> CreateFromAxisAngle(Vector3D`1<T> axis, T angle);
    public static Quaternion`1<T> CreateFromRotationMatrix(Matrix4X4`1<T> matrix);
    public static Quaternion`1<T> CreateFromRotationMatrix(Matrix3X3`1<T> matrix);
    public static Quaternion`1<T> CreateFromYawPitchRoll(T yaw, T pitch, T roll);
    public static Quaternion`1<T> Divide(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static T Dot(Quaternion`1<T> quaternion1, Quaternion`1<T> quaternion2);
    public static Quaternion`1<T> Inverse(Quaternion`1<T> value);
    public static Quaternion`1<T> Lerp(Quaternion`1<T> quaternion1, Quaternion`1<T> quaternion2, T amount);
    public static Quaternion`1<T> Multiply(Quaternion`1<T> value1, Quaternion`1<T> value2);
    public static Quaternion`1<T> Multiply(Quaternion`1<T> value1, T value2);
    public static Quaternion`1<T> Negate(Quaternion`1<T> value);
    public static Quaternion`1<T> Normalize(Quaternion`1<T> value);
    public static Quaternion`1<T> Slerp(Quaternion`1<T> quaternion1, Quaternion`1<T> quaternion2, T amount);
    public static Quaternion`1<T> Subtract(Quaternion`1<T> value1, Quaternion`1<T> value2);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Quaternion`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
public T Length();
    [IsReadOnlyAttribute]
public T LengthSquared();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    public static Quaternion`1<Half> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<float> op_Explicit(Quaternion`1<T> from);
    public static Quaternion op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<double> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<decimal> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<sbyte> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<byte> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<ushort> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<short> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<UInt32> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<int> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<ulong> op_Explicit(Quaternion`1<T> from);
    public static Quaternion`1<long> op_Explicit(Quaternion`1<T> from);
    public Quaternion`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Ray2D`1 : ValueType {
    [DataMemberAttribute]
public Vector2D`1<T> Origin;
    [DataMemberAttribute]
public Vector2D`1<T> Direction;
    public Ray2D`1(Vector2D`1<T> origin, Vector2D`1<T> direction);
    public Ray2D`1(Vector2D`1<T> origin, T directionX, T directionY);
    public Ray2D`1(T originX, T originY, Vector2D`1<T> direction);
    public Ray2D`1(T originX, T originY, T directionX, T directionY);
    [IsReadOnlyAttribute]
public Vector2D`1<T> GetPoint(T distance);
    public sealed virtual bool Equals(Ray2D`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Ray2D`1<T> value1, Ray2D`1<T> value2);
    public static bool op_Inequality(Ray2D`1<T> value1, Ray2D`1<T> value2);
    public Ray2D`1<TOther> As();
}
[DataContractAttribute]
public class Silk.NET.Maths.Ray3D`1 : ValueType {
    [DataMemberAttribute]
public Vector3D`1<T> Origin;
    [DataMemberAttribute]
public Vector3D`1<T> Direction;
    public Ray3D`1(Vector3D`1<T> origin, Vector3D`1<T> direction);
    public Ray3D`1(Vector3D`1<T> origin, T directionX, T directionY, T directionZ);
    public Ray3D`1(T originX, T originY, T originZ, Vector3D`1<T> direction);
    public Ray3D`1(T originX, T originY, T originZ, T directionX, T directionY, T directionZ);
    [IsReadOnlyAttribute]
public Vector3D`1<T> GetPoint(T distance);
    public sealed virtual bool Equals(Ray3D`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Ray3D`1<T> value1, Ray3D`1<T> value2);
    public static bool op_Inequality(Ray3D`1<T> value1, Ray3D`1<T> value2);
    public Ray3D`1<TOther> As();
}
public static class Silk.NET.Maths.Rectangle : object {
    public static Rectangle`1<T> FromLTRB(T left, T top, T right, T bottom);
}
[DataContractAttribute]
public class Silk.NET.Maths.Rectangle`1 : ValueType {
    [DataMemberAttribute]
public Vector2D`1<T> Origin;
    [DataMemberAttribute]
public Vector2D`1<T> Size;
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Center { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> Max { get; }
    [IgnoreDataMemberAttribute]
public Vector2D`1<T> HalfSize { get; }
    public Rectangle`1(Vector2D`1<T> origin, Vector2D`1<T> size);
    public Rectangle`1(Vector2D`1<T> origin, T sizeX, T sizeY);
    public Rectangle`1(T originX, T originY, Vector2D`1<T> size);
    public Rectangle`1(T originX, T originY, T sizeX, T sizeY);
    public Vector2D`1<T> get_Center();
    public Vector2D`1<T> get_Max();
    public Vector2D`1<T> get_HalfSize();
    public bool Contains(Vector2D`1<T> point);
    public bool Contains(Rectangle`1<T> other);
    public T GetDistanceToNearestEdge(Vector2D`1<T> point);
    public Rectangle`1<T> GetTranslated(Vector2D`1<T> distance);
    public Rectangle`1<T> GetScaled(Vector2D`1<T> scale, Vector2D`1<T> anchor);
    public Rectangle`1<T> GetScaled(Vector2D`1<TScale> scale, Vector2D`1<T> anchor);
    public Rectangle`1<T> GetInflated(Vector2D`1<T> point);
    public sealed virtual bool Equals(Rectangle`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Rectangle`1<T> value1, Rectangle`1<T> value2);
    public static bool op_Inequality(Rectangle`1<T> value1, Rectangle`1<T> value2);
    public Rectangle`1<TOther> As();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Silk.NET.Maths.Scalar : object {
    internal static MethodImplOptions MaxOpt;
    private static UInt64[] __two_to_jby64;
    private static UInt32[] _logTblLookup;
    private static Int64[] _piBits;
    public static bool IsHardwareAccelerated { get; }
    private static Scalar();
    public static TTo As(TFrom val);
    internal static void ThrowUnsupportedType();
    internal static void ThrowOpUnsupportedType();
    internal static void ThrowOpUnsupportedPrecision();
    private static void ThrowIndexOutOfRange();
    public static bool get_IsHardwareAccelerated();
    public static bool IsFinite(T f);
    public static bool IsInfinity(T f);
    public static bool IsNaN(T f);
    public static bool IsNegative(T f);
    public static bool IsNegativeInfinity(T f);
    public static bool IsNormal(T f);
    public static bool IsPositiveInfinity(T f);
    public static bool IsSubnormal(T f);
    public static bool Equal(T left, T right);
    public static bool NotEqual(T left, T right);
    public static bool GreaterThan(T left, T right);
    public static bool GreaterThanOrEqual(T left, T right);
    public static bool LessThan(T left, T right);
    public static bool LessThanOrEqual(T left, T right);
    public static T Add(T left, T right);
    public static T Subtract(T left, T right);
    public static T Multiply(T left, T right);
    public static T Divide(T left, T right);
    public static T Negate(T x);
    [NullableContextAttribute("0")]
public static T And(T left, T right);
    [NullableContextAttribute("0")]
public static T Not(T value);
    [NullableContextAttribute("0")]
public static T Or(T left, T right);
    [NullableContextAttribute("0")]
public static T RotateLeft(T value, int offset);
    [NullableContextAttribute("0")]
public static T RotateRight(T value, int offset);
    [NullableContextAttribute("0")]
public static T ShiftLeft(T value, int offset);
    [NullableContextAttribute("0")]
public static T ShiftRight(T value, int offset);
    [NullableContextAttribute("0")]
public static T Xor(T left, T right);
    public static T DegreesToRadians(T degrees);
    public static T RadiansToDegrees(T radians);
    private static UInt64[] InitExp();
    private static float CoreFastExp(float x);
    public static T Reciprocal(T x);
    private static UInt32[] InitLog();
    private static float CoreFastLog(float x);
    [NullableContextAttribute("0")]
public static T Abs(T x);
    public static T Acos(T x);
    public static T Acosh(T x);
    public static T Asin(T x);
    public static T Asinh(T x);
    public static T Atan(T x);
    public static T Atanh(T x);
    public static T Cbrt(T x);
    public static T Ceiling(T x);
    public static T Cos(T x);
    public static T Cosh(T x);
    public static T Exp(T x);
    public static T Floor(T x);
    public static int Sign(T x);
    public static T Sin(T x);
    public static T Sinh(T x);
    public static T Sqrt(T x);
    public static T Tan(T x);
    public static T Tanh(T x);
    public static T Truncate(T x);
    public static T Log(T x);
    public static T Log10(T x);
    public static T Round(T x);
    public static T IEEERemainder(T x, T y);
    public static T Log(T x, T y);
    public static T Max(T x, T y);
    public static T Min(T x, T y);
    public static T Pow(T x, T y);
    public static T Atan2(T y, T x);
    public static T Round(T x, int digits);
    public static T Round(T x, int digits, MidpointRounding mode);
    public static T Round(T x, MidpointRounding mode);
    private static double CoreAtanh(double x);
    private static double Log1P(double x);
    private static double CoreAcosh(double x);
    private static double CoreAsinh(double x);
    private static double CoreCbrt(double x);
    private static float CoreFastPow(float x, float y);
    private static long GetPiBits(int index);
    internal static float Sin_Ported(float x);
    private static bool CoreIsNegative(double d);
    private static bool CoreIsNegative(float f);
    private static bool CoreIsFinite(float f);
    private static bool CoreIsSubnormal(float f);
    private static bool CoreIsSubnormal(double f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToHalf|0_0(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToFloat|0_1(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToDouble|0_2(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToDecimal|0_3(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToSByte|0_4(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToByte|0_5(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToShort|0_6(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToUShort|0_7(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToInt|0_8(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToUInt|0_9(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToLong|0_10(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToULong|0_11(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToComplex|0_12(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromHalfToBigInteger|0_13(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToHalf|0_14(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToFloat|0_15(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToDouble|0_16(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToDecimal|0_17(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToSByte|0_18(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToByte|0_19(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToShort|0_20(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToUShort|0_21(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToInt|0_22(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToUInt|0_23(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToLong|0_24(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToULong|0_25(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToComplex|0_26(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromFloatToBigInteger|0_27(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToHalf|0_28(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToFloat|0_29(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToDouble|0_30(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToDecimal|0_31(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToSByte|0_32(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToByte|0_33(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToShort|0_34(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToUShort|0_35(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToInt|0_36(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToUInt|0_37(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToLong|0_38(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToULong|0_39(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToComplex|0_40(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDoubleToBigInteger|0_41(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToHalf|0_42(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToFloat|0_43(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToDouble|0_44(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToDecimal|0_45(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToSByte|0_46(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToByte|0_47(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToShort|0_48(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToUShort|0_49(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToInt|0_50(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToUInt|0_51(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToLong|0_52(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToULong|0_53(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToComplex|0_54(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromDecimalToBigInteger|0_55(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToHalf|0_56(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToFloat|0_57(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToDouble|0_58(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToDecimal|0_59(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToSByte|0_60(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToByte|0_61(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToShort|0_62(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToUShort|0_63(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToInt|0_64(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToUInt|0_65(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToLong|0_66(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToULong|0_67(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToComplex|0_68(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromSByteToBigInteger|0_69(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToHalf|0_70(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToFloat|0_71(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToDouble|0_72(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToDecimal|0_73(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToSByte|0_74(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToByte|0_75(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToShort|0_76(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToUShort|0_77(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToInt|0_78(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToUInt|0_79(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToLong|0_80(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToULong|0_81(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToComplex|0_82(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromByteToBigInteger|0_83(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToHalf|0_84(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToFloat|0_85(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToDouble|0_86(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToDecimal|0_87(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToSByte|0_88(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToByte|0_89(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToShort|0_90(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToUShort|0_91(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToInt|0_92(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToUInt|0_93(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToLong|0_94(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToULong|0_95(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToComplex|0_96(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromShortToBigInteger|0_97(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToHalf|0_98(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToFloat|0_99(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToDouble|0_100(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToDecimal|0_101(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToSByte|0_102(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToByte|0_103(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToShort|0_104(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToUShort|0_105(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToInt|0_106(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToUInt|0_107(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToLong|0_108(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToULong|0_109(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToComplex|0_110(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUShortToBigInteger|0_111(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToHalf|0_112(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToFloat|0_113(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToDouble|0_114(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToDecimal|0_115(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToSByte|0_116(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToByte|0_117(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToShort|0_118(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToUShort|0_119(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToInt|0_120(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToUInt|0_121(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToLong|0_122(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToULong|0_123(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToComplex|0_124(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromIntToBigInteger|0_125(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToHalf|0_126(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToFloat|0_127(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToDouble|0_128(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToDecimal|0_129(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToSByte|0_130(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToByte|0_131(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToShort|0_132(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToUShort|0_133(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToInt|0_134(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToUInt|0_135(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToLong|0_136(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToULong|0_137(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToComplex|0_138(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromUIntToBigInteger|0_139(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToHalf|0_140(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToFloat|0_141(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToDouble|0_142(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToDecimal|0_143(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToSByte|0_144(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToByte|0_145(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToShort|0_146(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToUShort|0_147(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToInt|0_148(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToUInt|0_149(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToLong|0_150(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToULong|0_151(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToComplex|0_152(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromLongToBigInteger|0_153(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToHalf|0_154(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToFloat|0_155(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToDouble|0_156(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToDecimal|0_157(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToSByte|0_158(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToByte|0_159(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToShort|0_160(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToUShort|0_161(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToInt|0_162(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToUInt|0_163(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToLong|0_164(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToULong|0_165(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToComplex|0_166(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromULongToBigInteger|0_167(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToHalf|0_168(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToFloat|0_169(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToDouble|0_170(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToDecimal|0_171(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToSByte|0_172(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToByte|0_173(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToShort|0_174(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToUShort|0_175(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToInt|0_176(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToUInt|0_177(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToLong|0_178(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToULong|0_179(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToComplex|0_180(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromComplexToBigInteger|0_181(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToHalf|0_182(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToFloat|0_183(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToDouble|0_184(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToDecimal|0_185(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToSByte|0_186(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToByte|0_187(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToShort|0_188(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToUShort|0_189(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToInt|0_190(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToUInt|0_191(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToLong|0_192(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToULong|0_193(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToComplex|0_194(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static TTo <As>g__FromBigIntegerToBigInteger|0_195(TFrom val);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsFinite>g__Float|8_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsFinite>g__Double|8_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsFinite>g__Complex|8_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsFinite>g__Other|8_3(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsInfinity>g__Float|9_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsInfinity>g__Double|9_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsInfinity>g__Complex|9_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsInfinity>g__Other|9_3(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNaN>g__Float|10_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNaN>g__Double|10_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNaN>g__Complex|10_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNaN>g__Other|10_3(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Float|11_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Double|11_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Short|11_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Int|11_3(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Long|11_4(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Decimal|11_5(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__SByte|11_6(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__BigInteger|11_7(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegative>g__Other|11_8(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegativeInfinity>g__Float|12_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegativeInfinity>g__Double|12_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNegativeInfinity>g__Other|12_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNormal>g__Float|13_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNormal>g__Double|13_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsNormal>g__Other|13_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsPositiveInfinity>g__Float|14_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsPositiveInfinity>g__Double|14_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsPositiveInfinity>g__Other|14_2(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsSubnormal>g__Float|15_0(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <IsSubnormal>g__Double|15_1(T f);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Float|16_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Double|16_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Decimal|16_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__SByte|16_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Byte|16_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Int|16_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__UInt|16_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Long|16_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__ULong|16_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Short|16_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__UShort|16_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__BigInteger|16_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Complex|16_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <Equal>g__Other|16_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Float|17_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Double|17_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Decimal|17_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__SByte|17_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Byte|17_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Int|17_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__UInt|17_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Long|17_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__ULong|17_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Short|17_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__UShort|17_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__BigInteger|17_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Complex|17_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <NotEqual>g__Other|17_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Float|18_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Double|18_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Decimal|18_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__SByte|18_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Byte|18_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Int|18_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__UInt|18_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Long|18_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__ULong|18_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Short|18_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__UShort|18_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__BigInteger|18_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThan>g__Other|18_12(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Float|19_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Double|19_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Decimal|19_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__SByte|19_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Byte|19_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Int|19_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__UInt|19_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Long|19_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__ULong|19_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Short|19_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__UShort|19_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__BigInteger|19_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <GreaterThanOrEqual>g__Other|19_12(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Float|20_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Double|20_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Decimal|20_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__SByte|20_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Byte|20_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Int|20_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__UInt|20_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Long|20_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__ULong|20_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Short|20_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__UShort|20_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__BigInteger|20_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThan>g__Other|20_12(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Float|21_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Double|21_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Decimal|21_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__SByte|21_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Byte|21_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Int|21_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__UInt|21_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Long|21_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__ULong|21_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Short|21_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__UShort|21_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__BigInteger|21_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static bool <LessThanOrEqual>g__Other|21_12(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Float|22_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Double|22_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Decimal|22_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__SByte|22_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Byte|22_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Short|22_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__UShort|22_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Int|22_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__UInt|22_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Long|22_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__ULong|22_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__BigInteger|22_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Complex|22_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Add>g__Other|22_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Float|23_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Double|23_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Decimal|23_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__SByte|23_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Byte|23_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Short|23_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__UShort|23_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Int|23_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__UInt|23_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Long|23_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__ULong|23_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__BigInteger|23_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Complex|23_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Subtract>g__Other|23_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Float|24_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Double|24_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Decimal|24_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__SByte|24_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Byte|24_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Short|24_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__UShort|24_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Int|24_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__UInt|24_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Long|24_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__ULong|24_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__BigInteger|24_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Complex|24_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Multiply>g__Other|24_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Float|25_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Double|25_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Decimal|25_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__SByte|25_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Byte|25_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Short|25_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__UShort|25_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Int|25_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__UInt|25_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Long|25_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__ULong|25_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__BigInteger|25_11(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Complex|25_12(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Divide>g__Other|25_13(T _, T __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Byte|27_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__SByte|27_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__UInt16|27_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Int16|27_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__UInt32|27_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Int32|27_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__UInt64|27_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Int64|27_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Single|27_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Double|27_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <And>g__Other|27_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Byte|28_0(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__SByte|28_1(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__UInt16|28_2(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Int16|28_3(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__UInt32|28_4(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Int32|28_5(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__UInt64|28_6(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Int64|28_7(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Single|28_8(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Double|28_9(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Not>g__Other|28_10(T value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Byte|29_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__SByte|29_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__UInt16|29_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Int16|29_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__UInt32|29_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Int32|29_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__UInt64|29_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Int64|29_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Single|29_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Double|29_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Or>g__Other|29_10(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Byte|30_0(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__SByte|30_1(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__UShort|30_2(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Short|30_3(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__UInt|30_4(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Int|30_5(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__ULong|30_6(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Long|30_7(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Float|30_8(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Double|30_9(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateLeft>g__Other|30_10(T _, int __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Byte|31_0(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__SByte|31_1(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__UShort|31_2(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Short|31_3(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__UInt|31_4(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Int|31_5(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__ULong|31_6(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Long|31_7(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Float|31_8(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Double|31_9(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <RotateRight>g__Other|31_10(T _, int __);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Byte|32_0(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__SByte|32_1(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__UInt16|32_2(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Int16|32_3(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__UInt32|32_4(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Int32|32_5(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__UInt64|32_6(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Int64|32_7(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Single|32_8(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Double|32_9(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftLeft>g__Other|32_10(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Byte|33_0(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__SByte|33_1(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__UInt16|33_2(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Int16|33_3(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__UInt32|33_4(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Int32|33_5(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__UInt64|33_6(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Int64|33_7(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Single|33_8(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Double|33_9(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <ShiftRight>g__Other|33_10(T value, int offset);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Byte|34_0(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__SByte|34_1(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__UInt16|34_2(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Int16|34_3(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__UInt32|34_4(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Int32|34_5(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__UInt64|34_6(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Int64|34_7(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Single|34_8(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Double|34_9(T left, T right);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Xor>g__Other|34_10(T left, T right);
    [CompilerGeneratedAttribute]
internal static UInt32 <CoreFastExp>g__top12f|39_0(float x);
    [CompilerGeneratedAttribute]
internal static UInt32 <CoreFastExp>g__asuint32|39_1(float x);
    [CompilerGeneratedAttribute]
internal static float <CoreFastExp>g__asfloat|39_2(UInt32 x);
    [CompilerGeneratedAttribute]
internal static ulong <CoreFastExp>g__asuint64|39_3(double x);
    [CompilerGeneratedAttribute]
internal static double <CoreFastExp>g__asdouble|39_4(ulong x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Float|40_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Double|40_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Decimal|40_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__SByte|40_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Byte|40_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__UShort|40_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Short|40_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__UInt|40_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Int|40_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__ULong|40_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Long|40_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__BigInteger|40_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Complex|40_12(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Reciprocal>g__Other|40_13(T _);
    [CompilerGeneratedAttribute]
internal static UInt32 <CoreFastLog>g__asuint|43_0(float x);
    [CompilerGeneratedAttribute]
internal static float <CoreFastLog>g__asfloat|43_1(UInt32 x);
    [CompilerGeneratedAttribute]
internal static float <CoreFastLog>g__InlineLog1Pf|43_2(float x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Float|44_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Double|44_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__SByte|44_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Byte|44_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Int|44_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__UInt|44_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Long|44_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__ULong|44_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Short|44_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__UShort|44_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Complex|44_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Abs>g__Decimal|44_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Float|45_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Double|45_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__SByte|45_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Byte|45_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Int|45_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__UInt|45_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Long|45_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__ULong|45_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Short|45_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__UShort|45_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Complex|45_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acos>g__Decimal|45_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Float|46_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Double|46_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__SByte|46_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Byte|46_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Int|46_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__UInt|46_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Long|46_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__ULong|46_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Short|46_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__UShort|46_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Acosh>g__Decimal|46_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Float|47_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Double|47_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__SByte|47_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Byte|47_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Int|47_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__UInt|47_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Long|47_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__ULong|47_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Short|47_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__UShort|47_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Complex|47_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asin>g__Decimal|47_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Float|48_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Double|48_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__SByte|48_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Byte|48_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Int|48_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__UInt|48_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Long|48_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__ULong|48_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Short|48_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__UShort|48_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Asinh>g__Decimal|48_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Float|49_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Double|49_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__SByte|49_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Byte|49_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Int|49_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__UInt|49_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Long|49_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__ULong|49_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Short|49_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__UShort|49_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Complex|49_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan>g__Decimal|49_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Float|50_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Double|50_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Decimal|50_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__SByte|50_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Byte|50_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Short|50_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__UShort|50_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Int|50_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__UInt|50_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__Long|50_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atanh>g__ULong|50_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Float|51_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Double|51_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Decimal|51_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__SByte|51_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Byte|51_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Short|51_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__UShort|51_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Int|51_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__UInt|51_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Long|51_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__Complex|51_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cbrt>g__ULong|51_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Float|52_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Double|52_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Decimal|52_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__SByte|52_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Byte|52_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Short|52_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__UShort|52_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Int|52_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__UInt|52_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__Long|52_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Ceiling>g__ULong|52_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Float|53_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Double|53_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Decimal|53_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__SByte|53_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Byte|53_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Short|53_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__UShort|53_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Int|53_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__UInt|53_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Long|53_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__Complex|53_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cos>g__ULong|53_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Float|54_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Double|54_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Decimal|54_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__SByte|54_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Byte|54_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Short|54_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__UShort|54_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Int|54_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__UInt|54_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Long|54_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__Complex|54_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Cosh>g__ULong|54_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Float|55_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Double|55_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Decimal|55_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__SByte|55_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Byte|55_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Short|55_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__UShort|55_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Int|55_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__UInt|55_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Long|55_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__Complex|55_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Exp>g__ULong|55_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Float|56_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Double|56_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Decimal|56_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__SByte|56_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Byte|56_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Short|56_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__UShort|56_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Int|56_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__UInt|56_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__Long|56_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Floor>g__ULong|56_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Float|57_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Double|57_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Decimal|57_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__SByte|57_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Byte|57_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Short|57_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__UShort|57_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Int|57_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__UInt|57_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__Long|57_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <Sign>g__ULong|57_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Float|58_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Double|58_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Decimal|58_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__SByte|58_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Byte|58_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Short|58_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__UShort|58_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Int|58_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__UInt|58_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Long|58_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__Complex|58_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sin>g__ULong|58_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Float|59_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Double|59_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Decimal|59_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__SByte|59_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Byte|59_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Short|59_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__UShort|59_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Int|59_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__UInt|59_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Long|59_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__Complex|59_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sinh>g__ULong|59_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Float|60_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Double|60_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Decimal|60_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__SByte|60_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Byte|60_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Short|60_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__UShort|60_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Int|60_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__UInt|60_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Long|60_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__Complex|60_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Sqrt>g__ULong|60_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Float|61_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Double|61_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Decimal|61_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__SByte|61_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Byte|61_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Short|61_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__UShort|61_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Int|61_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__UInt|61_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Long|61_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__Complex|61_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tan>g__ULong|61_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Float|62_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Double|62_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Decimal|62_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__SByte|62_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Byte|62_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Short|62_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__UShort|62_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Int|62_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__UInt|62_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Long|62_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__Complex|62_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Tanh>g__ULong|62_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Float|63_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Double|63_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Decimal|63_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__SByte|63_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Byte|63_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Short|63_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__UShort|63_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Int|63_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__UInt|63_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__Long|63_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Truncate>g__ULong|63_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Float|64_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Double|64_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Decimal|64_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__SByte|64_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Byte|64_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Short|64_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__UShort|64_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Int|64_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__UInt|64_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Long|64_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Complex|64_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__ULong|64_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Float|65_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Double|65_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Decimal|65_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__SByte|65_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Byte|65_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Short|65_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__UShort|65_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Int|65_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__UInt|65_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Long|65_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__Complex|65_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log10>g__ULong|65_11(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Float|66_0(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Double|66_1(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Decimal|66_2(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__SByte|66_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Byte|66_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Short|66_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__UShort|66_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Int|66_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__UInt|66_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Long|66_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__ULong|66_10(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Float|67_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Double|67_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Decimal|67_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__SByte|67_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Byte|67_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Short|67_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__UShort|67_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Int|67_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__UInt|67_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__Long|67_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <IEEERemainder>g__ULong|67_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Float|68_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Double|68_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Decimal|68_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__SByte|68_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Byte|68_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Short|68_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__UShort|68_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Int|68_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__UInt|68_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Long|68_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__Complex|68_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Log>g__ULong|68_11(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Float|69_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Double|69_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Decimal|69_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__SByte|69_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Byte|69_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Short|69_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__UShort|69_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Int|69_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__UInt|69_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__Long|69_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Max>g__ULong|69_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Float|70_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Double|70_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Decimal|70_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__SByte|70_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Byte|70_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Short|70_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__UShort|70_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Int|70_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__UInt|70_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__Long|70_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Min>g__ULong|70_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Float|71_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Double|71_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Decimal|71_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__SByte|71_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Byte|71_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Short|71_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__UShort|71_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Int|71_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__UInt|71_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Long|71_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__Complex|71_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Pow>g__ULong|71_11(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Float|72_0(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Double|72_1(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Decimal|72_2(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__SByte|72_3(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Byte|72_4(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Short|72_5(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__UShort|72_6(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Int|72_7(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__UInt|72_8(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__Long|72_9(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Atan2>g__ULong|72_10(T x, T y);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Float|73_0(T x, int digits);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Double|73_1(T x, int digits);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Decimal|73_2(T x, int digits);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Other|73_3(T x, int digits);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Float|74_0(T x, int digits, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Double|74_1(T x, int digits, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Decimal|74_2(T x, int digits, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Other|74_3(T x, int digits, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Float|75_0(T x, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Double|75_1(T x, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Decimal|75_2(T x, MidpointRounding mode);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__SByte|75_3(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Byte|75_4(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Short|75_5(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__UShort|75_6(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Int|75_7(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__UInt|75_8(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__Long|75_9(T x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <Round>g__ULong|75_10(T x);
    [CompilerGeneratedAttribute]
internal static double <Sin_Ported>g__CosTaylorSeriesOneIteration|84_0(double x1);
    [CompilerGeneratedAttribute]
internal static double <Sin_Ported>g__CosTaylorSeriesFourIterations|84_1(double x1);
    [CompilerGeneratedAttribute]
internal static double <Sin_Ported>g__ReduceForLargeInput|84_2(double x, Int32& region);
    [CompilerGeneratedAttribute]
internal static double <Sin_Ported>g__SinTaylorSeriesOneIteration|84_3(double x1);
    [CompilerGeneratedAttribute]
internal static double <Sin_Ported>g__SinTaylorSeriesFourIterations|84_4(double x1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Silk.NET.Maths.Scalar`1 : object {
    public static T Epsilon;
    public static T MaxValue;
    public static T MinValue;
    public static T NaN;
    public static T NegativeInfinity;
    public static T PositiveInfinity;
    public static T Zero;
    public static T One;
    public static T Two;
    public static T MinusOne;
    public static T MinusTwo;
    public static T E;
    public static T Pi;
    public static T PiOver2;
    public static T Tau;
    public static T DegreesPerRadian;
    public static T RadiansPerDegree;
    internal static bool IntrinsicsApplicable;
    private static float FloatE;
    private static float FloatPi;
    private static float FloatTau;
    private static Scalar`1();
}
[DataContractAttribute]
public class Silk.NET.Maths.Sphere`1 : ValueType {
    [DataMemberAttribute]
public Vector3D`1<T> Center;
    [DataMemberAttribute]
public T Radius;
    [IgnoreDataMemberAttribute]
public T Diameter { get; }
    [IgnoreDataMemberAttribute]
public T SquaredRadius { get; }
    public Sphere`1(Vector3D`1<T> center, T radius);
    public Sphere`1(T centerX, T centerY, T centerZ, T radius);
    public T get_Diameter();
    public T get_SquaredRadius();
    public bool Contains(Vector3D`1<T> point);
    public bool Contains(Sphere`1<T> other);
    public T GetDistanceToNearestEdgeSquared(Vector3D`1<T> point);
    public T GetDistanceToNearestEdge(Vector3D`1<T> point);
    public Sphere`1<T> GetTranslated(Vector3D`1<T> distance);
    public Sphere`1<T> GetInflated(Vector3D`1<T> point);
    public sealed virtual bool Equals(Sphere`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Sphere`1<T> value1, Sphere`1<T> value2);
    public static bool op_Inequality(Sphere`1<T> value1, Sphere`1<T> value2);
    public Sphere`1<TOther> As();
}
[ExtensionAttribute]
public static class Silk.NET.Maths.SystemNumericsExtensions : object {
    [ExtensionAttribute]
public static Matrix3x2 ToSystem(Matrix3X2`1<float> value);
    [ExtensionAttribute]
public static Matrix4x4 ToSystem(Matrix4X4`1<float> value);
    [ExtensionAttribute]
public static Plane ToSystem(Plane`1<float> value);
    [ExtensionAttribute]
public static Quaternion ToSystem(Quaternion`1<float> value);
    [ExtensionAttribute]
public static Vector2 ToSystem(Vector2D`1<float> value);
    [ExtensionAttribute]
public static Vector3 ToSystem(Vector3D`1<float> value);
    public static Vector4 ToSystem(Vector4D`1<float> value);
    [ExtensionAttribute]
public static Matrix3X2`1<float> ToGeneric(Matrix3x2 value);
    [ExtensionAttribute]
public static Matrix4X4`1<float> ToGeneric(Matrix4x4 value);
    [ExtensionAttribute]
public static Plane`1<float> ToGeneric(Plane value);
    [ExtensionAttribute]
public static Quaternion`1<float> ToGeneric(Quaternion value);
    [ExtensionAttribute]
public static Vector2D`1<float> ToGeneric(Vector2 value);
    [ExtensionAttribute]
public static Vector3D`1<float> ToGeneric(Vector3 value);
    public static Vector4D`1<float> ToGeneric(Vector4 value);
}
public static class Silk.NET.Maths.Vector2D : object {
    public static Vector2D`1<T> Abs(Vector2D`1<T> value);
    public static Vector2D`1<T> Add(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> Clamp(Vector2D`1<T> value1, Vector2D`1<T> min, Vector2D`1<T> max);
    public static T Distance(Vector2D`1<T> value1, Vector2D`1<T> value2);
    public static T DistanceSquared(Vector2D`1<T> value1, Vector2D`1<T> value2);
    public static Vector2D`1<T> Divide(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> Divide(Vector2D`1<T> left, T divisor);
    public static T Dot(Vector2D`1<T> value1, Vector2D`1<T> value2);
    public static Vector2D`1<T> Lerp(Vector2D`1<T> value1, Vector2D`1<T> value2, T amount);
    public static Vector2D`1<T> Max(Vector2D`1<T> value1, Vector2D`1<T> value2);
    public static Vector2D`1<T> Min(Vector2D`1<T> value1, Vector2D`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> Multiply(Vector2D`1<T> left, T right);
    public static Vector2D`1<T> Multiply(T left, Vector2D`1<T> right);
    public static Vector2D`1<T> Negate(Vector2D`1<T> value);
    public static Vector2D`1<T> Normalize(Vector2D`1<T> value);
    public static Vector2D`1<T> Reflect(Vector2D`1<T> vector, Vector2D`1<T> normal);
    public static Vector2D`1<T> SquareRoot(Vector2D`1<T> value);
    public static Vector2D`1<T> Subtract(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> Transform(Vector2D`1<T> position, Matrix4X4`1<T> matrix);
    public static Vector2D`1<T> TransformNormal(Vector2D`1<T> normal, Matrix4X4`1<T> matrix);
    public static Vector2D`1<T> Transform(Vector2D`1<T> value, Quaternion`1<T> rotation);
    public static Vector2D`1<T> Transform(Vector2D`1<T> position, Matrix3X2`1<T> matrix);
    public static Vector2D`1<T> TransformNormal(Vector2D`1<T> normal, Matrix3X2`1<T> matrix);
    public static Vector4D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X4`1<T> value2);
    public static Vector3D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X3`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector2D`1<T> value1, Matrix2X2`1<T> value2);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Vector2D`1 : ValueType {
    [DataMemberAttribute]
public T X;
    [DataMemberAttribute]
public T Y;
    public static Vector2D`1<T> One { get; }
    public static Vector2D`1<T> UnitX { get; }
    public static Vector2D`1<T> UnitY { get; }
    public static Vector2D`1<T> Zero { get; }
    public T Item { get; }
    public T Length { get; }
    public T LengthSquared { get; }
    public Vector2D`1(T value);
    public Vector2D`1(T x, T y);
    public static Vector2D`1<T> get_One();
    public static Vector2D`1<T> get_UnitX();
    public static Vector2D`1<T> get_UnitY();
    public static Vector2D`1<T> get_Zero();
    public T get_Item(int i);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array, int index);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Vector2D`1<T> other);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    public T get_Length();
    [IsReadOnlyAttribute]
public T get_LengthSquared();
    public static Vector2D`1<T> op_Addition(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_Division(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_Division(Vector2D`1<T> value1, T value2);
    public static bool op_Equality(Vector2D`1<T> left, Vector2D`1<T> right);
    public static bool op_Inequality(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_Multiply(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_Multiply(Vector2D`1<T> left, T right);
    public static Vector2D`1<T> op_Multiply(T left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_Subtraction(Vector2D`1<T> left, Vector2D`1<T> right);
    public static Vector2D`1<T> op_UnaryNegation(Vector2D`1<T> value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public string ToString(string format);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    public static Vector2D`1<Half> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<float> op_Explicit(Vector2D`1<T> from);
    public static Vector2 op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<double> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<decimal> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<sbyte> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<byte> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<ushort> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<short> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<UInt32> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<int> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<ulong> op_Explicit(Vector2D`1<T> from);
    public static Vector2D`1<long> op_Explicit(Vector2D`1<T> from);
    public Vector2D`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|13_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|13_1();
}
public static class Silk.NET.Maths.Vector3D : object {
    public static Vector3D`1<T> Abs(Vector3D`1<T> value);
    public static Vector3D`1<T> Add(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> Clamp(Vector3D`1<T> value1, Vector3D`1<T> min, Vector3D`1<T> max);
    public static Vector3D`1<T> Cross(Vector3D`1<T> vector1, Vector3D`1<T> vector2);
    public static T Distance(Vector3D`1<T> value1, Vector3D`1<T> value2);
    public static T DistanceSquared(Vector3D`1<T> value1, Vector3D`1<T> value2);
    public static Vector3D`1<T> Divide(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> Divide(Vector3D`1<T> left, T divisor);
    public static T Dot(Vector3D`1<T> vector1, Vector3D`1<T> vector2);
    public static Vector3D`1<T> Lerp(Vector3D`1<T> value1, Vector3D`1<T> value2, T amount);
    public static Vector3D`1<T> Max(Vector3D`1<T> value1, Vector3D`1<T> value2);
    public static Vector3D`1<T> Min(Vector3D`1<T> value1, Vector3D`1<T> value2);
    public static Vector3D`1<T> Multiply(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector4D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X4`1<T> value2);
    public static Vector3D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X3`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector3D`1<T> value1, Matrix3X2`1<T> value2);
    public static Vector3D`1<T> Multiply(Vector3D`1<T> left, T right);
    public static Vector3D`1<T> Multiply(T left, Vector3D`1<T> right);
    public static Vector3D`1<T> Negate(Vector3D`1<T> value);
    public static Vector3D`1<T> Normalize(Vector3D`1<T> value);
    public static Vector3D`1<T> Reflect(Vector3D`1<T> vector, Vector3D`1<T> normal);
    public static Vector3D`1<T> SquareRoot(Vector3D`1<T> value);
    public static Vector3D`1<T> Subtract(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> Transform(Vector3D`1<T> position, Matrix4X4`1<T> matrix);
    public static Vector3D`1<T> Transform(Vector3D`1<T> value, Quaternion`1<T> rotation);
    public static Vector3D`1<T> TransformNormal(Vector3D`1<T> normal, Matrix4X4`1<T> matrix);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Vector3D`1 : ValueType {
    [DataMemberAttribute]
public T X;
    [DataMemberAttribute]
public T Y;
    [DataMemberAttribute]
public T Z;
    public static Vector3D`1<T> Zero { get; }
    public static Vector3D`1<T> One { get; }
    public static Vector3D`1<T> UnitX { get; }
    public static Vector3D`1<T> UnitY { get; }
    public static Vector3D`1<T> UnitZ { get; }
    public T Item { get; }
    public T Length { get; }
    public T LengthSquared { get; }
    public Vector3D`1(T value);
    public Vector3D`1(Vector2D`1<T> value, T z);
    public Vector3D`1(T x, T y, T z);
    public static Vector3D`1<T> get_Zero();
    public static Vector3D`1<T> get_One();
    public static Vector3D`1<T> get_UnitX();
    public static Vector3D`1<T> get_UnitY();
    public static Vector3D`1<T> get_UnitZ();
    public T get_Item(int i);
    public static Vector3D`1<T> op_Addition(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_Division(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_Division(Vector3D`1<T> value1, T value2);
    public static bool op_Equality(Vector3D`1<T> left, Vector3D`1<T> right);
    public static bool op_Inequality(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_Multiply(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_Multiply(Vector3D`1<T> left, T right);
    public static Vector3D`1<T> op_Multiply(T left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_Subtraction(Vector3D`1<T> left, Vector3D`1<T> right);
    public static Vector3D`1<T> op_UnaryNegation(Vector3D`1<T> value);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array, int index);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Vector3D`1<T> other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    public T get_Length();
    public T get_LengthSquared();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public string ToString(string format);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    public static Vector3D`1<Half> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<float> op_Explicit(Vector3D`1<T> from);
    public static Vector3 op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<double> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<decimal> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<sbyte> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<byte> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<ushort> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<short> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<UInt32> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<int> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<ulong> op_Explicit(Vector3D`1<T> from);
    public static Vector3D`1<long> op_Explicit(Vector3D`1<T> from);
    public Vector3D`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|17_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|17_1();
}
public static class Silk.NET.Maths.Vector4D : object {
    public static Vector4D`1<T> Abs(Vector4D`1<T> value);
    public static Vector4D`1<T> Add(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> Clamp(Vector4D`1<T> value1, Vector4D`1<T> min, Vector4D`1<T> max);
    public static T Distance(Vector4D`1<T> value1, Vector4D`1<T> value2);
    public static T DistanceSquared(Vector4D`1<T> value1, Vector4D`1<T> value2);
    public static Vector4D`1<T> Divide(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> Divide(Vector4D`1<T> left, T divisor);
    public static T Dot(Vector4D`1<T> vector1, Vector4D`1<T> vector2);
    public static Vector4D`1<T> Lerp(Vector4D`1<T> value1, Vector4D`1<T> value2, T amount);
    public static Vector4D`1<T> Max(Vector4D`1<T> value1, Vector4D`1<T> value2);
    public static Vector4D`1<T> Min(Vector4D`1<T> value1, Vector4D`1<T> value2);
    public static Vector4D`1<T> Multiply(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X4`1<T> value2);
    public static Vector3D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X3`1<T> value2);
    public static Vector2D`1<T> Multiply(Vector4D`1<T> value1, Matrix4X2`1<T> value2);
    public static Vector4D`1<T> Multiply(Vector4D`1<T> left, T right);
    public static Vector4D`1<T> Multiply(T left, Vector4D`1<T> right);
    public static Vector4D`1<T> Negate(Vector4D`1<T> value);
    public static Vector4D`1<T> Normalize(Vector4D`1<T> vector);
    public static Vector4D`1<T> SquareRoot(Vector4D`1<T> value);
    public static Vector4D`1<T> Subtract(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> Transform(Vector2D`1<T> position, Matrix4X4`1<T> matrix);
    public static Vector4D`1<T> Transform(Vector2D`1<T> value, Quaternion`1<T> rotation);
    public static Vector4D`1<T> Transform(Vector3D`1<T> position, Matrix4X4`1<T> matrix);
    public static Vector4D`1<T> Transform(Vector3D`1<T> value, Quaternion`1<T> rotation);
    public static Vector4D`1<T> Transform(Vector4D`1<T> vector, Matrix4X4`1<T> matrix);
    public static Vector4D`1<T> Transform(Vector4D`1<T> value, Quaternion`1<T> rotation);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Silk.NET.Maths.Vector4D`1 : ValueType {
    [DataMemberAttribute]
public T X;
    [DataMemberAttribute]
public T Y;
    [DataMemberAttribute]
public T Z;
    [DataMemberAttribute]
public T W;
    public T Item { get; }
    public static Vector4D`1<T> Zero { get; }
    public static Vector4D`1<T> One { get; }
    public static Vector4D`1<T> UnitX { get; }
    public static Vector4D`1<T> UnitY { get; }
    public static Vector4D`1<T> UnitZ { get; }
    public static Vector4D`1<T> UnitW { get; }
    public T Length { get; }
    public T LengthSquared { get; }
    public Vector4D`1(T value);
    public Vector4D`1(Vector2D`1<T> value, T z, T w);
    public Vector4D`1(Vector3D`1<T> value, T w);
    public Vector4D`1(T x, T y, T z, T w);
    public T get_Item(int i);
    public static Vector4D`1<T> get_Zero();
    public static Vector4D`1<T> get_One();
    public static Vector4D`1<T> get_UnitX();
    public static Vector4D`1<T> get_UnitY();
    public static Vector4D`1<T> get_UnitZ();
    public static Vector4D`1<T> get_UnitW();
    public static Vector4D`1<T> op_Addition(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_Division(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_Division(Vector4D`1<T> value1, T value2);
    public static bool op_Equality(Vector4D`1<T> left, Vector4D`1<T> right);
    public static bool op_Inequality(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_Multiply(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_Multiply(Vector4D`1<T> left, T right);
    public static Vector4D`1<T> op_Multiply(T left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_Subtraction(Vector4D`1<T> left, Vector4D`1<T> right);
    public static Vector4D`1<T> op_UnaryNegation(Vector4D`1<T> value);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array);
    [IsReadOnlyAttribute]
public void CopyTo(T[] array, int index);
    [IsReadOnlyAttribute]
public sealed virtual bool Equals(Vector4D`1<T> other);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    public T get_Length();
    public T get_LengthSquared();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public string ToString(string format);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    public static Vector4D`1<Half> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<float> op_Explicit(Vector4D`1<T> from);
    public static Vector4 op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<double> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<decimal> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<sbyte> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<byte> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<ushort> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<short> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<UInt32> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<int> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<ulong> op_Explicit(Vector4D`1<T> from);
    public static Vector4D`1<long> op_Explicit(Vector4D`1<T> from);
    public Vector4D`1<TOther> As();
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__VerifyBounds|5_0(int i);
    [CompilerGeneratedAttribute]
internal static void <get_Item>g__ThrowHelper|5_1();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsUnmanagedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
