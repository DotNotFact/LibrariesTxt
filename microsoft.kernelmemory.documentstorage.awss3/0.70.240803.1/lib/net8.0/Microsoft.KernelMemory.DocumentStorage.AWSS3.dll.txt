[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.AWSS3Config : object {
    [CompilerGeneratedAttribute]
private AuthTypes <Auth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretAccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public AuthTypes Auth { get; public set; }
    public string AccessKey { get; public set; }
    public string SecretAccessKey { get; public set; }
    public string Endpoint { get; public set; }
    public string BucketName { get; public set; }
    [CompilerGeneratedAttribute]
public AuthTypes get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(AuthTypes value);
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_SecretAccessKey();
    [CompilerGeneratedAttribute]
public void set_SecretAccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    public void Validate();
}
[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddAWSS3AsDocumentStorage(IServiceCollection services, AWSS3Config config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage : object {
    private AmazonS3Client _client;
    private ILogger`1<AWSS3Storage> _log;
    private string _bucketName;
    public AWSS3Storage(AWSS3Config config, ILogger`1<AWSS3Storage> log);
    public sealed virtual Task CreateIndexDirectoryAsync(string index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<DeleteIndexDirectoryAsync>d__5")]
public sealed virtual Task DeleteIndexDirectoryAsync(string index, CancellationToken cancellationToken);
    public sealed virtual Task CreateDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<EmptyDocumentDirectoryAsync>d__7")]
public sealed virtual Task EmptyDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<DeleteDocumentDirectoryAsync>d__8")]
public sealed virtual Task DeleteDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<WriteFileAsync>d__9")]
public sealed virtual Task WriteFileAsync(string index, string documentId, string fileName, Stream streamContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<ReadFileAsync>d__10")]
public sealed virtual Task`1<StreamableFileContent> ReadFileAsync(string index, string documentId, string fileName, bool logErrIfNotFound, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AWSS3.AWSS3Storage/<DeleteObjectsByPrefixAsync>d__12")]
private Task DeleteObjectsByPrefixAsync(string prefix, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IKernelMemoryBuilder WithAWSS3DocumentStorage(IKernelMemoryBuilder builder, AWSS3Config config);
}
