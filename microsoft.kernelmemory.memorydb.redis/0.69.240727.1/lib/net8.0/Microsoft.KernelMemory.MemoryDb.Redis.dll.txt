[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddRedisAsMemoryDb(IServiceCollection services, RedisConfig redisConfig);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithRedisMemoryDb(IKernelMemoryBuilder builder, string connString);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithRedisMemoryDb(IKernelMemoryBuilder builder, RedisConfig redisConfig);
}
[ExtensionAttribute]
internal static class Microsoft.KernelMemory.MemoryDb.Redis.RedisEmbeddingExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Byte[] VectorBlob(Embedding embedding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.Redis.RedisException : KernelMemoryException {
    public RedisException(string message);
    public RedisException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExperimentalAttribute("KMEXP03")]
public class Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory : object {
    private IDatabase _db;
    private ISearchCommandsAsync _search;
    private RedisConfig _config;
    private ITextEmbeddingGenerator _embeddingGenerator;
    private ILogger`1<RedisMemory> _logger;
    private String[] _fieldNamesNoEmbeddings;
    private static string EmbeddingFieldName;
    private static string PayloadFieldName;
    private static char DefaultSeparator;
    private static string DistanceFieldName;
    private static Char[] s_tagEscapeChars;
    private static Regex s_replaceIndexNameCharsRegex;
    private static string KmSeparator;
    public RedisMemory(RedisConfig config, IConnectionMultiplexer multiplexer, ITextEmbeddingGenerator embeddingGenerator, ILogger`1<RedisMemory> logger);
    private static RedisMemory();
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<CreateIndexAsync>d__7")]
public sealed virtual Task CreateIndexAsync(string index, int vectorSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<GetIndexesAsync>d__8")]
public sealed virtual Task`1<IEnumerable`1<string>> GetIndexesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<DeleteIndexAsync>d__9")]
public sealed virtual Task DeleteIndexAsync(string index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<UpsertAsync>d__10")]
public sealed virtual Task`1<string> UpsertAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<GetSimilarListAsync>d__11")]
public sealed virtual IAsyncEnumerable`1<ValueTuple`2<MemoryRecord, double>> GetSimilarListAsync(string index, string text, ICollection`1<MemoryFilter> filters, double minRelevance, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.Redis.RedisMemory/<GetListAsync>d__12")]
public sealed virtual IAsyncEnumerable`1<MemoryRecord> GetListAsync(string index, ICollection`1<MemoryFilter> filters, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    private ValueTuple`2<MemoryRecord, double> FromDocument(Document doc, bool withEmbedding);
    private static string NormalizeIndexName(string index, string prefix);
    private static string EscapeTagField(string text);
    private static RedisKey Key(string indexWithPrefix, string id);
    private static Single[] ByteArrayToFloatArray(Byte[] bytes);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetIndexesAsync>b__8_1(string x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <GetIndexesAsync>b__8_2(string x);
}
internal static class Microsoft.KernelMemory.MemoryDb.Redis.Scripts : object {
    [NullableAttribute("1")]
internal static string CheckIndexAndUpsert;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.RedisConfig : object {
    public static string DefaultIndexPrefix;
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private VectorAlgo <VectorAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Nullable`1<char>> <Tags>k__BackingField;
    public string ConnectionString { get; public set; }
    public string AppPrefix { get; }
    public VectorAlgo VectorAlgorithm { get; public set; }
    public Dictionary`2<string, Nullable`1<char>> Tags { get; }
    public RedisConfig(string appPrefix, Dictionary`2<string, Nullable`1<char>> tags);
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public void set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public string get_AppPrefix();
    [CompilerGeneratedAttribute]
public VectorAlgo get_VectorAlgorithm();
    [CompilerGeneratedAttribute]
public void set_VectorAlgorithm(VectorAlgo value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Nullable`1<char>> get_Tags();
}
