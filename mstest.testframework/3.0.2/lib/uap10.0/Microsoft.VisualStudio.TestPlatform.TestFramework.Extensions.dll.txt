[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.VisualStudio.TestTools.UnitTesting.AppContainer.UITestMethodAttribute : TestMethodAttribute {
    [NullableContextAttribute("1")]
public virtual TestResult[] Execute(ITestMethod testMethod);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("68")]
internal class Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputDirectory>k__BackingField;
    public string Path { get; }
    public string OutputDirectory { get; }
    public DeploymentItemAttribute(string path);
    public DeploymentItemAttribute(string path, string outputDirectory);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public string get_OutputDirectory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.VisualStudio.TestTools.UnitTesting.TestContext : object {
    internal static string FullyQualifiedTestClassNameLabel;
    internal static string ManagedTypeLabel;
    internal static string ManagedMethodLabel;
    internal static string TestNameLabel;
    internal static string TestRunDirectoryLabel;
    internal static string DeploymentDirectoryLabel;
    internal static string ResultsDirectoryLabel;
    internal static string TestRunResultsDirectoryLabel;
    internal static string TestResultsDirectoryLabel;
    internal static string TestDirLabel;
    internal static string TestDeploymentDirLabel;
    internal static string TestLogsDirLabel;
    [CompilerGeneratedAttribute]
private CancellationTokenSource <CancellationTokenSource>k__BackingField;
    public IDictionary Properties { get; }
    public CancellationTokenSource CancellationTokenSource { get; protected set; }
    [NullableAttribute("2")]
public string FullyQualifiedTestClassName { get; }
    [NullableAttribute("2")]
public string ManagedType { get; }
    [NullableAttribute("2")]
public string ManagedMethod { get; }
    [NullableAttribute("2")]
public string TestName { get; }
    public UnitTestOutcome CurrentTestOutcome { get; }
    private static TestContext();
    public abstract virtual IDictionary get_Properties();
    [CompilerGeneratedAttribute]
public virtual CancellationTokenSource get_CancellationTokenSource();
    [CompilerGeneratedAttribute]
protected virtual void set_CancellationTokenSource(CancellationTokenSource value);
    [NullableContextAttribute("2")]
public virtual string get_FullyQualifiedTestClassName();
    [NullableContextAttribute("2")]
public virtual string get_ManagedType();
    [NullableContextAttribute("2")]
public virtual string get_ManagedMethod();
    [NullableContextAttribute("2")]
public virtual string get_TestName();
    public virtual UnitTestOutcome get_CurrentTestOutcome();
    public abstract virtual void AddResultFile(string fileName);
    [NullableContextAttribute("2")]
public abstract virtual void Write(string message);
    public abstract virtual void Write(string format, Object[] args);
    [NullableContextAttribute("2")]
public abstract virtual void WriteLine(string message);
    public abstract virtual void WriteLine(string format, Object[] args);
    private T GetProperty(string name);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
