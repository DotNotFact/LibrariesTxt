[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.AzureBlobsConfig : object {
    [NullableAttribute("2")]
private StorageSharedKeyCredential _storageSharedKeyCredential;
    [NullableAttribute("2")]
private AzureSasCredential _azureSasCredential;
    [NullableAttribute("2")]
private TokenCredential _tokenCredential;
    [CompilerGeneratedAttribute]
private AuthTypes <Auth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointSuffix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    public AuthTypes Auth { get; public set; }
    public string ConnectionString { get; public set; }
    public string Account { get; public set; }
    public string AccountKey { get; public set; }
    public string EndpointSuffix { get; public set; }
    public string Container { get; public set; }
    [CompilerGeneratedAttribute]
public AuthTypes get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(AuthTypes value);
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public void set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public string get_Account();
    [CompilerGeneratedAttribute]
public void set_Account(string value);
    [CompilerGeneratedAttribute]
public string get_AccountKey();
    [CompilerGeneratedAttribute]
public void set_AccountKey(string value);
    [CompilerGeneratedAttribute]
public string get_EndpointSuffix();
    [CompilerGeneratedAttribute]
public void set_EndpointSuffix(string value);
    [CompilerGeneratedAttribute]
public string get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(string value);
    public void SetCredential(StorageSharedKeyCredential credential);
    public void SetCredential(AzureSasCredential credential);
    public void SetCredential(TokenCredential credential);
    public StorageSharedKeyCredential GetStorageSharedKeyCredential();
    public AzureSasCredential GetAzureSasCredential();
    public TokenCredential GetTokenCredential();
}
[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddAzureBlobsAsDocumentStorage(IServiceCollection services, AzureBlobsConfig config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExperimentalAttribute("KMEXP03")]
public class Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage : object {
    private static string DefaultContainerName;
    private static string DefaultEndpointSuffix;
    private BlobContainerClient _containerClient;
    private string _containerName;
    private ILogger`1<AzureBlobsStorage> _log;
    private IMimeTypeDetection _mimeTypeDetection;
    [NullableContextAttribute("2")]
public AzureBlobsStorage(AzureBlobsConfig config, IMimeTypeDetection mimeTypeDetection, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<CreateIndexDirectoryAsync>d__7")]
public sealed virtual Task CreateIndexDirectoryAsync(string index, CancellationToken cancellationToken);
    public sealed virtual Task DeleteIndexDirectoryAsync(string index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<CreateDocumentDirectoryAsync>d__9")]
public sealed virtual Task CreateDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    public sealed virtual Task EmptyDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    public sealed virtual Task DeleteDocumentDirectoryAsync(string index, string documentId, CancellationToken cancellationToken);
    public sealed virtual Task WriteFileAsync(string index, string documentId, string fileName, Stream streamContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<ReadFileAsync>d__13")]
public sealed virtual Task`1<StreamableFileContent> ReadFileAsync(string index, string documentId, string fileName, bool logErrIfNotFound, CancellationToken cancellationToken);
    private static string JoinPaths(string index, string documentId);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<InternalWriteAsync>d__15")]
private Task InternalWriteAsync(string directoryName, string fileName, string fileType, object content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<DeleteBlobsByPrefixAsync>d__16")]
private Task DeleteBlobsByPrefixAsync(string prefix, CancellationToken cancellationToken);
    private BlobClient GetBlobClient(string blobName);
    private BlobLeaseClient GetBlobLeaseClient(BlobClient blobClient);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<LeaseBlobAsync>d__19")]
private Task`1<BlobLease> LeaseBlobAsync(BlobLeaseClient blobLeaseClient, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.KernelMemory.DocumentStorage.AzureBlobs.AzureBlobsStorage/<ReleaseBlobAsync>d__20")]
private Task ReleaseBlobAsync(BlobLeaseClient blobLeaseClient, BlobLease lease, CancellationToken cancellationToken);
    private void ValidateAccountName(string value);
    private void ValidateAccountKey(string value);
    private void ValidateConnectionString(string value);
    private string ValidateEndpointSuffix(string value);
}
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IKernelMemoryBuilder WithAzureBlobsDocumentStorage(IKernelMemoryBuilder builder, AzureBlobsConfig config);
}
