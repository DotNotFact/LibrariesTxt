[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.AdditionalItemsAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BoolValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <TypeValue>k__BackingField;
    public Nullable`1<bool> BoolValue { get; }
    public Type TypeValue { get; }
    public AdditionalItemsAttribute(bool boolSchema);
    [NullableContextAttribute("1")]
public AdditionalItemsAttribute(Type typeSchema);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BoolValue();
    [CompilerGeneratedAttribute]
public Type get_TypeValue();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.AdditionalPropertiesAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BoolValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <TypeValue>k__BackingField;
    public Nullable`1<bool> BoolValue { get; }
    public Type TypeValue { get; }
    public AdditionalPropertiesAttribute(bool boolSchema);
    [NullableContextAttribute("1")]
public AdditionalPropertiesAttribute(Type typeSchema);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BoolValue();
    [CompilerGeneratedAttribute]
public Type get_TypeValue();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
internal class Json.Schema.Generation.AdHocGenerationContext : SchemaGenerationContextBase {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.Schema.Generation.AttributeHandler : object {
    private static List`1<IAttributeHandler> _externalHandlers;
    private static AttributeHandler();
    [NullableContextAttribute("0")]
public static void AddHandler();
    public static void AddHandler(IAttributeHandler handler);
    [NullableContextAttribute("0")]
public static void RemoveHandler();
    internal static void HandleAttributes(SchemaGenerationContextBase context);
    [ExtensionAttribute]
internal static IEnumerable`1<Attribute> WhereHandled(IEnumerable`1<Attribute> attributes);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Json.Schema.Generation.ConditionalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private object <ConditionGroup>k__BackingField;
    public object ConditionGroup { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_ConditionGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionGroup(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.ConstAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public ConstAttribute(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[ExtensionAttribute]
public static class Json.Schema.Generation.ContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<Attribute> GetAttributes(SchemaGenerationContextBase context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.DefaultAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public DefaultAttribute(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.DescriptionAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Description { get; }
    public DescriptionAttribute(string description);
    [CompilerGeneratedAttribute]
public string get_Description();
    private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.ExclusiveMaximumAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; }
    public ExclusiveMaximumAttribute(double value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.ExclusiveMinimumAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; }
    public ExclusiveMinimumAttribute(double value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[ExtensionAttribute]
internal static class Json.Schema.Generation.GeneralExtensions : object {
    [ExtensionAttribute]
public static decimal ClampToDecimal(double value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Json.Schema.Generation.GeneratorRegistry : object {
    private static List`1<ISchemaGenerator> _generators;
    private static GeneratorRegistry();
    public static void Register(ISchemaGenerator generator);
    internal static ISchemaGenerator Get(Type type);
}
internal class Json.Schema.Generation.Generators.ArraySchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.BooleanSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.DateTimeSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.EnumDictionarySchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.EnumGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.GuidSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.IntegerSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.Generators.ISchemaGenerator {
    public abstract virtual bool Handles(Type type);
    public abstract virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.JsonArraySchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.JsonNodeSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.JsonObjectSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.JsonPointerSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.JsonValueSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.NullableValueTypeSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.NumberSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Json.Schema.Generation.Generators.ObjectSchemaGenerator : object {
    public sealed virtual bool Handles(Type type);
    public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
    [IteratorStateMachineAttribute("Json.Schema.Generation.Generators.ObjectSchemaGenerator/<ExpandEnumConditions>d__2")]
private static IEnumerable`1<ValueTuple`2<IConditionAttribute, MemberInfo>> ExpandEnumConditions(IConditionAttribute condition, IEnumerable`1<MemberInfo> members);
    private static IfIntent GenerateIf(IEnumerable`1<ValueTuple`2<IConditionAttribute, MemberInfo>> conditions);
    private static ThenIntent GenerateThen(List`1<ValueTuple`2<MemberInfo, ConditionalAttribute>> consequences, Dictionary`2<string, SchemaGenerationContextBase> prebuiltMemberContexts);
}
internal class Json.Schema.Generation.Generators.StringDictionarySchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.StringSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
internal class Json.Schema.Generation.Generators.UriSchemaGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Handles(Type type);
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.IAttributeHandler {
    public abstract virtual void AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
public interface Json.Schema.Generation.IAttributeHandler`1 {
}
[NullableContextAttribute("1")]
internal interface Json.Schema.Generation.IConditionAttribute {
    public string PropertyName { get; public set; }
    [NullableAttribute("2")]
public object ConditionGroup { get; public set; }
    public abstract virtual string get_PropertyName();
    public abstract virtual void set_PropertyName(string value);
    [NullableContextAttribute("2")]
public abstract virtual object get_ConditionGroup();
    [NullableContextAttribute("2")]
public abstract virtual void set_ConditionGroup(object value);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.IContextContainer {
    public abstract virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1052")]
public class Json.Schema.Generation.IfAttribute : ConditionalAttribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("1")]
public string PropertyName { get; public set; }
    public object Value { get; public set; }
    public IfAttribute(string propertyName, object value, object group);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_PropertyName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1052")]
public class Json.Schema.Generation.IfEnumAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseNumbers>k__BackingField;
    public string PropertyName { get; public set; }
    public bool UseNumbers { get; public set; }
    public IfEnumAttribute(string propertyName, bool useNumbers);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public bool get_UseNumbers();
    [CompilerGeneratedAttribute]
public void set_UseNumbers(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1052")]
public class Json.Schema.Generation.IfMaxAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExclusive>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <PropertyType>k__BackingField;
    public string PropertyName { get; public set; }
    public double Value { get; public set; }
    public bool IsExclusive { get; public set; }
    [NullableAttribute("2")]
internal Type PropertyType { get; internal set; }
    public IfMaxAttribute(string propertyName, double value, object group);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public bool get_IsExclusive();
    [CompilerGeneratedAttribute]
public void set_IsExclusive(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal Type get_PropertyType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_PropertyType(Type value);
    [NullableContextAttribute("2")]
internal ISchemaKeywordIntent GetIntent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1052")]
public class Json.Schema.Generation.IfMinAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExclusive>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <PropertyType>k__BackingField;
    public string PropertyName { get; public set; }
    public double Value { get; public set; }
    public bool IsExclusive { get; public set; }
    [NullableAttribute("2")]
internal Type PropertyType { get; internal set; }
    public IfMinAttribute(string propertyName, double value, object group);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public bool get_IsExclusive();
    [CompilerGeneratedAttribute]
public void set_IsExclusive(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal Type get_PropertyType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_PropertyType(Type value);
    [NullableContextAttribute("2")]
internal ISchemaKeywordIntent GetIntent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.AdditionalItemsIntent : object {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <Context>k__BackingField;
    public SchemaGenerationContextBase Context { get; private set; }
    public AdditionalItemsIntent(SchemaGenerationContextBase context);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(SchemaGenerationContextBase value);
    public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.AdditionalPropertiesIntent : object {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <Context>k__BackingField;
    public SchemaGenerationContextBase Context { get; private set; }
    public AdditionalPropertiesIntent(SchemaGenerationContextBase context);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(SchemaGenerationContextBase value);
    public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.AllOfIntent : object {
    [CompilerGeneratedAttribute]
private List`1<IEnumerable`1<ISchemaKeywordIntent>> <Subschemas>k__BackingField;
    public List`1<IEnumerable`1<ISchemaKeywordIntent>> Subschemas { get; }
    public AllOfIntent(IEnumerable`1<IEnumerable`1<ISchemaKeywordIntent>> subschemas);
    public AllOfIntent(IEnumerable`1[] subschemas);
    [CompilerGeneratedAttribute]
public List`1<IEnumerable`1<ISchemaKeywordIntent>> get_Subschemas();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
    private static JsonSchema Build(IEnumerable`1<ISchemaKeywordIntent> subschema);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.AnyOfIntent : object {
    [CompilerGeneratedAttribute]
private List`1<IEnumerable`1<ISchemaKeywordIntent>> <Subschemas>k__BackingField;
    public List`1<IEnumerable`1<ISchemaKeywordIntent>> Subschemas { get; }
    public AnyOfIntent(IEnumerable`1<IEnumerable`1<ISchemaKeywordIntent>> subschemas);
    public AnyOfIntent(IEnumerable`1[] subschemas);
    [CompilerGeneratedAttribute]
public List`1<IEnumerable`1<ISchemaKeywordIntent>> get_Subschemas();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
    private static JsonSchema Build(IEnumerable`1<ISchemaKeywordIntent> subschema);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.ConstIntent : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public ConstIntent(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.DefaultIntent : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public DefaultIntent(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.DefsIntent : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, SchemaGenerationContextBase> <Definitions>k__BackingField;
    public Dictionary`2<string, SchemaGenerationContextBase> Definitions { get; }
    public DefsIntent(Dictionary`2<string, SchemaGenerationContextBase> definitions);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, SchemaGenerationContextBase> get_Definitions();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.DeprecatedIntent : object {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; public set; }
    public DeprecatedIntent(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.DescriptionIntent : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public DescriptionIntent(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.ElseIntent : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISchemaKeywordIntent> <Subschema>k__BackingField;
    public IEnumerable`1<ISchemaKeywordIntent> Subschema { get; }
    public ElseIntent(IEnumerable`1<ISchemaKeywordIntent> subschema);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ISchemaKeywordIntent> get_Subschema();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
    private static JsonSchema Build(IEnumerable`1<ISchemaKeywordIntent> subschema);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.EnumIntent : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Names>k__BackingField;
    public List`1<string> Names { get; public set; }
    public EnumIntent(IEnumerable`1<string> names);
    public EnumIntent(String[] names);
    [CompilerGeneratedAttribute]
public List`1<string> get_Names();
    [CompilerGeneratedAttribute]
public void set_Names(List`1<string> value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.ExclusiveMaximumIntent : object {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; public set; }
    public ExclusiveMaximumIntent(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(decimal value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.ExclusiveMinimumIntent : object {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; public set; }
    public ExclusiveMinimumIntent(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(decimal value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.FormatIntent : object {
    [CompilerGeneratedAttribute]
private Format <Format>k__BackingField;
    public Format Format { get; public set; }
    public FormatIntent(Format format);
    [CompilerGeneratedAttribute]
public Format get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(Format value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.IfIntent : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISchemaKeywordIntent> <Subschema>k__BackingField;
    public IEnumerable`1<ISchemaKeywordIntent> Subschema { get; }
    public IfIntent(IEnumerable`1<ISchemaKeywordIntent> subschema);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ISchemaKeywordIntent> get_Subschema();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
    private static JsonSchema Build(IEnumerable`1<ISchemaKeywordIntent> subschema);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.ItemsIntent : object {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <Context>k__BackingField;
    public SchemaGenerationContextBase Context { get; private set; }
    public ItemsIntent(SchemaGenerationContextBase context);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(SchemaGenerationContextBase value);
    public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MaximumIntent : object {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; public set; }
    public MaximumIntent(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(decimal value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MaxItemsIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MaxItemsIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MaxLengthIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MaxLengthIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MaxPropertiesIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MaxPropertiesIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MinimumIntent : object {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; public set; }
    public MinimumIntent(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(decimal value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MinItemsIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MinItemsIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MinLengthIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MinLengthIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MinPropertiesIntent : object {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; public set; }
    public MinPropertiesIntent(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.MultipleOfIntent : object {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; public set; }
    public MultipleOfIntent(decimal value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(decimal value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.PatternIntent : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public PatternIntent(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.PropertiesIntent : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, SchemaGenerationContextBase> <Properties>k__BackingField;
    public Dictionary`2<string, SchemaGenerationContextBase> Properties { get; }
    public PropertiesIntent(Dictionary`2<string, SchemaGenerationContextBase> properties);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, SchemaGenerationContextBase> get_Properties();
    public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.PropertyNamesIntent : object {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <Context>k__BackingField;
    public SchemaGenerationContextBase Context { get; private set; }
    public PropertyNamesIntent(SchemaGenerationContextBase context);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(SchemaGenerationContextBase value);
    public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.ReadOnlyIntent : object {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; public set; }
    public ReadOnlyIntent(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.RefIntent : object {
    [CompilerGeneratedAttribute]
private Uri <Reference>k__BackingField;
    public Uri Reference { get; public set; }
    public RefIntent(Uri reference);
    [CompilerGeneratedAttribute]
public Uri get_Reference();
    [CompilerGeneratedAttribute]
public void set_Reference(Uri value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.RequiredIntent : object {
    [CompilerGeneratedAttribute]
private List`1<string> <RequiredProperties>k__BackingField;
    public List`1<string> RequiredProperties { get; }
    public RequiredIntent(List`1<string> requiredProperties);
    [CompilerGeneratedAttribute]
public List`1<string> get_RequiredProperties();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.ThenIntent : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISchemaKeywordIntent> <Subschema>k__BackingField;
    public IEnumerable`1<ISchemaKeywordIntent> Subschema { get; }
    public ThenIntent(IEnumerable`1<ISchemaKeywordIntent> subschema);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ISchemaKeywordIntent> get_Subschema();
    public sealed virtual void Apply(JsonSchemaBuilder builder);
    private static JsonSchema Build(IEnumerable`1<ISchemaKeywordIntent> subschema);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.TitleIntent : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public TitleIntent(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.TypeIntent : object {
    [CompilerGeneratedAttribute]
private SchemaValueType <Type>k__BackingField;
    public SchemaValueType Type { get; public set; }
    public TypeIntent(SchemaValueType type);
    [CompilerGeneratedAttribute]
public SchemaValueType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(SchemaValueType value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Json.Schema.Generation.Intents.UnevaluatedPropertiesIntent : object {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <Context>k__BackingField;
    public SchemaGenerationContextBase Context { get; private set; }
    public UnevaluatedPropertiesIntent(SchemaGenerationContextBase context);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(SchemaGenerationContextBase value);
    [NullableContextAttribute("1")]
public sealed virtual void Replace(int hashCode, SchemaGenerationContextBase newContext);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.UniqueItemsIntent : object {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; public set; }
    public UniqueItemsIntent(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
public class Json.Schema.Generation.Intents.WriteOnlyIntent : object {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; public set; }
    public WriteOnlyIntent(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.ISchemaKeywordIntent {
    public abstract virtual void Apply(JsonSchemaBuilder builder);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.ISchemaRefiner {
    public abstract virtual bool ShouldRun(SchemaGenerationContextBase context);
    public abstract virtual void Run(SchemaGenerationContextBase context);
}
[NullableContextAttribute("1")]
public interface Json.Schema.Generation.ITypeNameGenerator {
    public abstract virtual string GenerateName(Type type);
}
[AttributeUsageAttribute("384")]
public class Json.Schema.Generation.JsonExcludeAttribute : JsonAttribute {
}
[AttributeUsageAttribute("384")]
public class Json.Schema.Generation.JsonIncludeAttribute : JsonAttribute {
}
public class Json.Schema.Generation.JsonNumberHandlingAttributeHandler : object {
    [NullableContextAttribute("1")]
public sealed virtual void AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.Schema.Generation.JsonSchemaBuilderExtensions : object {
    [ExtensionAttribute]
public static JsonSchemaBuilder FromType(JsonSchemaBuilder builder, SchemaGeneratorConfiguration configuration);
    [ExtensionAttribute]
public static JsonSchemaBuilder FromType(JsonSchemaBuilder builder, Type type, SchemaGeneratorConfiguration configuration);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MaximumAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; }
    public MaximumAttribute(double value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MaxItemsAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; }
    public MaxItemsAttribute(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MaxLengthAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private UInt32 <Length>k__BackingField;
    public UInt32 Length { get; }
    public MaxLengthAttribute(UInt32 length);
    [CompilerGeneratedAttribute]
public UInt32 get_Length();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay}")]
public class Json.Schema.Generation.MemberGenerationContext : SchemaGenerationContextBase {
    [CompilerGeneratedAttribute]
private SchemaGenerationContextBase <BasedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Attribute> <Attributes>k__BackingField;
    public SchemaGenerationContextBase BasedOn { get; internal set; }
    public List`1<Attribute> Attributes { get; }
    internal MemberGenerationContext(SchemaGenerationContextBase basedOn, List`1<Attribute> attributes);
    internal MemberGenerationContext(Type basedOnType, List`1<Attribute> attributes);
    [CompilerGeneratedAttribute]
public SchemaGenerationContextBase get_BasedOn();
    [CompilerGeneratedAttribute]
internal void set_BasedOn(SchemaGenerationContextBase value);
    [CompilerGeneratedAttribute]
public List`1<Attribute> get_Attributes();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.Schema.Generation.MemberInfoMetadataTokenComparer`1 : Comparer`1<MemberInfo> {
    private Type[] _typeOrder;
    [CompilerGeneratedAttribute]
private static MemberInfoMetadataTokenComparer`1<T> <Instance>k__BackingField;
    public static MemberInfoMetadataTokenComparer`1<T> Instance { get; }
    private static MemberInfoMetadataTokenComparer`1();
    [CompilerGeneratedAttribute]
public static MemberInfoMetadataTokenComparer`1<T> get_Instance();
    [NullableContextAttribute("2")]
public virtual int Compare(MemberInfo x, MemberInfo y);
    [NullableContextAttribute("2")]
private static bool HasMetadataToken(MemberInfo member);
    [NullableContextAttribute("2")]
private static int GetMetadataToken(MemberInfo member);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MinimumAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; }
    public MinimumAttribute(double value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MinItemsAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private UInt32 <Value>k__BackingField;
    public UInt32 Value { get; }
    public MinItemsAttribute(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MinLengthAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private UInt32 <Length>k__BackingField;
    public UInt32 Length { get; }
    public MinLengthAttribute(UInt32 length);
    [CompilerGeneratedAttribute]
public UInt32 get_Length();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.MultipleOfAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private decimal <Value>k__BackingField;
    public decimal Value { get; }
    public MultipleOfAttribute(double value);
    [CompilerGeneratedAttribute]
public decimal get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[FlagsAttribute]
public enum Json.Schema.Generation.Nullability : Enum {
    public int value__;
    public static Nullability Disabled;
    public static Nullability AllowForNullableValueTypes;
    public static Nullability AllowForReferenceTypes;
    public static Nullability AllowForAllTypes;
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.NullableAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    public bool IsNullable { get; }
    public NullableAttribute(bool isNullable);
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.PatternAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public PatternAttribute(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
public class Json.Schema.Generation.PropertyNameResolver : MulticastDelegate {
    public PropertyNameResolver(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual string Invoke(MemberInfo input);
    public virtual IAsyncResult BeginInvoke(MemberInfo input, AsyncCallback callback, object object);
    public virtual string EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Json.Schema.Generation.PropertyNameResolvers : object {
    public static PropertyNameResolver AsDeclared;
    public static PropertyNameResolver CamelCase;
    public static PropertyNameResolver PascalCase;
    public static PropertyNameResolver SnakeCase;
    public static PropertyNameResolver LowerSnakeCase;
    public static PropertyNameResolver UpperSnakeCase;
    public static PropertyNameResolver KebabCase;
    public static PropertyNameResolver UpperKebabCase;
    private static PropertyNameResolvers();
}
public class Json.Schema.Generation.PropertyNamingMethod : MulticastDelegate {
    public PropertyNamingMethod(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual string Invoke(string input);
    public virtual IAsyncResult BeginInvoke(string input, AsyncCallback callback, object object);
    public virtual string EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Use PropertyNameResolvers instead.")]
public static class Json.Schema.Generation.PropertyNamingMethods : object {
    public static PropertyNamingMethod AsDeclared;
    public static PropertyNamingMethod CamelCase;
    public static PropertyNamingMethod PascalCase;
    public static PropertyNamingMethod SnakeCase;
    public static PropertyNamingMethod LowerSnakeCase;
    public static PropertyNamingMethod UpperSnakeCase;
    public static PropertyNamingMethod KebabCase;
    public static PropertyNamingMethod UpperKebabCase;
    private static PropertyNamingMethods();
}
public enum Json.Schema.Generation.PropertyOrder : Enum {
    public int value__;
    public static PropertyOrder AsDeclared;
    public static PropertyOrder ByName;
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.ReadOnlyAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; }
    public ReadOnlyAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Json.Schema.Generation.Refiners.NullabilityRefiner : object {
    [CompilerGeneratedAttribute]
private static NullabilityRefiner <Instance>k__BackingField;
    public static NullabilityRefiner Instance { get; }
    private static NullabilityRefiner();
    [CompilerGeneratedAttribute]
public static NullabilityRefiner get_Instance();
    public sealed virtual bool ShouldRun(SchemaGenerationContextBase context);
    public sealed virtual void Run(SchemaGenerationContextBase context);
    private static void ReplaceTypeWithNullableIntent(SchemaGenerationContextBase context, TypeIntent typeIntent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("384")]
public class Json.Schema.Generation.RequiredAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    internal string PropertyName { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_PropertyName();
    [CompilerGeneratedAttribute]
internal void set_PropertyName(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Json.Schema.Generation.SchemaGenerationContextBase : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IComparer`1<MemberInfo> _memberInfoComparer;
    public static SchemaGenerationContextBase True;
    public static SchemaGenerationContextBase False;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReferenceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ISchemaKeywordIntent> <Intents>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DebuggerDisplay>k__BackingField;
    public Type Type { get; }
    public int ReferenceCount { get; public set; }
    public List`1<ISchemaKeywordIntent> Intents { get; }
    public int Hash { get; public set; }
    internal IComparer`1<MemberInfo> DeclarationOrderComparer { get; }
    internal string DebuggerDisplay { get; internal set; }
    protected SchemaGenerationContextBase(Type type);
    private static SchemaGenerationContextBase();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public int get_ReferenceCount();
    [CompilerGeneratedAttribute]
public void set_ReferenceCount(int value);
    [CompilerGeneratedAttribute]
public List`1<ISchemaKeywordIntent> get_Intents();
    [CompilerGeneratedAttribute]
public int get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(int value);
    internal IComparer`1<MemberInfo> get_DeclarationOrderComparer();
    public JsonSchema Apply(JsonSchemaBuilder builder);
    internal void GenerateIntents();
    private static IComparer`1<MemberInfo> GetComparer(Type type);
    [CompilerGeneratedAttribute]
internal string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
internal void set_DebuggerDisplay(string value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GenerateIntents>b__24_0(ISchemaGenerator x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GenerateIntents>b__24_1(ISchemaRefiner x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Json.Schema.Generation.SchemaGenerationContextCache : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ThreadStaticAttribute]
private static Dictionary`2<int, SchemaGenerationContextBase> _cache;
    internal static Dictionary`2<int, SchemaGenerationContextBase> Cache { get; }
    internal static Dictionary`2<int, SchemaGenerationContextBase> get_Cache();
    public static SchemaGenerationContextBase Get(Type type, List`1<Attribute> memberAttributes);
    internal static void Clear();
    private static int CalculateHash(Type type, IEnumerable`1<Attribute> attributes);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.Schema.Generation.SchemaGenerationContextOptimizer : object {
    [CompilerGeneratedAttribute]
private static ITypeNameGenerator <TypeNameGenerator>k__BackingField;
    public static ITypeNameGenerator TypeNameGenerator { get; public set; }
    [CompilerGeneratedAttribute]
public static ITypeNameGenerator get_TypeNameGenerator();
    [CompilerGeneratedAttribute]
public static void set_TypeNameGenerator(ITypeNameGenerator value);
    internal static void Optimize();
    [NullableContextAttribute("1")]
private static string GetDefName(SchemaGenerationContextBase context, List`1<string> currentNames);
    [NullableContextAttribute("1")]
private static string GetName(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static string GetFriendlyTypeName(Type type, StringBuilder sb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.Schema.Generation.SchemaGeneratorConfiguration : object {
    [NullableAttribute("2")]
private PropertyNameResolver _propertyNameResolver;
    [CompilerGeneratedAttribute]
private List`1<ISchemaRefiner> <Refiners>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ISchemaGenerator> <Generators>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyOrder <PropertyOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullability <Nullability>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Optimize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StrictConditionals>k__BackingField;
    [CompilerGeneratedAttribute]
[ThreadStaticAttribute]
private static SchemaGeneratorConfiguration <Current>k__BackingField;
    public List`1<ISchemaRefiner> Refiners { get; }
    public List`1<ISchemaGenerator> Generators { get; }
    public PropertyOrder PropertyOrder { get; public set; }
    [NullableAttribute("2")]
[ObsoleteAttribute("Use PropertyNameResolver instead.")]
public PropertyNamingMethod PropertyNamingMethod { get; public set; }
    [NullableAttribute("2")]
public PropertyNameResolver PropertyNameResolver { get; public set; }
    public Nullability Nullability { get; public set; }
    public bool Optimize { get; public set; }
    public bool StrictConditionals { get; public set; }
    public static SchemaGeneratorConfiguration Current { get; internal set; }
    [CompilerGeneratedAttribute]
public List`1<ISchemaRefiner> get_Refiners();
    [CompilerGeneratedAttribute]
public List`1<ISchemaGenerator> get_Generators();
    [CompilerGeneratedAttribute]
public PropertyOrder get_PropertyOrder();
    [CompilerGeneratedAttribute]
public void set_PropertyOrder(PropertyOrder value);
    [NullableContextAttribute("2")]
public PropertyNamingMethod get_PropertyNamingMethod();
    [NullableContextAttribute("2")]
public void set_PropertyNamingMethod(PropertyNamingMethod value);
    [NullableContextAttribute("2")]
public PropertyNameResolver get_PropertyNameResolver();
    [NullableContextAttribute("2")]
public void set_PropertyNameResolver(PropertyNameResolver value);
    [CompilerGeneratedAttribute]
public Nullability get_Nullability();
    [CompilerGeneratedAttribute]
public void set_Nullability(Nullability value);
    [CompilerGeneratedAttribute]
public bool get_Optimize();
    [CompilerGeneratedAttribute]
public void set_Optimize(bool value);
    [CompilerGeneratedAttribute]
public bool get_StrictConditionals();
    [CompilerGeneratedAttribute]
public void set_StrictConditionals(bool value);
    [CompilerGeneratedAttribute]
public static SchemaGeneratorConfiguration get_Current();
    [CompilerGeneratedAttribute]
internal static void set_Current(SchemaGeneratorConfiguration value);
    [CompilerGeneratedAttribute]
private string <get_PropertyNamingMethod>b__13_0(string x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.TitleAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public string Title { get; }
    public TitleAttribute(string title);
    [CompilerGeneratedAttribute]
public string get_Title();
    private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.Schema.Generation.TypeExtensions : object {
    private static Dictionary`2<Type, string> _keywordedTypes;
    private static TypeExtensions();
    [ExtensionAttribute]
public static bool IsArray(Type type);
    [ExtensionAttribute]
internal static int GetAttributeSetHashCode(IEnumerable`1<Attribute> items);
    [ExtensionAttribute]
internal static Type GetMemberType(MemberInfo info);
    [ExtensionAttribute]
internal static bool IsReadOnly(MemberInfo info);
    [ExtensionAttribute]
internal static bool IsWriteOnly(MemberInfo info);
    [ExtensionAttribute]
internal static string CSharpName(Type type, StringBuilder sb);
    [ExtensionAttribute]
public static bool IsNullableValueType(Type type);
}
[DebuggerDisplayAttribute("{DebuggerDisplay}")]
public class Json.Schema.Generation.TypeGenerationContext : SchemaGenerationContextBase {
    [NullableContextAttribute("1")]
internal TypeGenerationContext(Type type);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.UniqueItemsAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; }
    public UniqueItemsAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[AttributeUsageAttribute("1436")]
public class Json.Schema.Generation.WriteOnlyAttribute : ConditionalAttribute {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; }
    public WriteOnlyAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [NullableContextAttribute("1")]
private sealed virtual override void Json.Schema.Generation.IAttributeHandler.AddConstraints(SchemaGenerationContextBase context, Attribute attribute);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
