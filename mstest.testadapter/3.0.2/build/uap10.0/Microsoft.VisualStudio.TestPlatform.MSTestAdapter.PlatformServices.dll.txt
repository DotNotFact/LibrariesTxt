[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.AdapterTraceLogger : object {
    public sealed virtual void LogError(string format, Object[] args);
    public sealed virtual void LogWarning(string format, Object[] args);
    public sealed virtual void LogInfo(string format, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Constants : object {
    public static TestProperty DeploymentItemsProperty;
    internal static string DllExtension;
    internal static string ExeExtension;
    internal static string AppxPackageExtension;
    private static string DeploymentItemsLabel;
    private static Constants();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.DiaSessionOperations : object {
    private static MethodInfo s_methodGetNavigationData;
    private static PropertyInfo s_propertyFileName;
    private static PropertyInfo s_propertyMinLineNumber;
    private static Type s_typeDiaSession;
    private static Type s_typeDiaNavigationData;
    private static DiaSessionOperations();
    [NullableContextAttribute("1")]
internal static object CreateNavigationSession(string source);
    [NullableContextAttribute("1")]
internal static void GetNavigationData(object navigationSession, string className, string methodName, Int32& minLineNumber, String& fileName);
    internal static void DisposeNavigationSession(object navigationSession);
    [NullableContextAttribute("1")]
internal static void Initialize(string diaSession, string diaNavigationData);
    private static object SafeInvoke(Func`1<T> action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.FileOperations : object {
    public sealed virtual Assembly LoadAssembly(string assemblyName, bool isReflectionOnly);
    public sealed virtual string GetAssemblyPath(Assembly assembly);
    public sealed virtual bool DoesFileExist(string assemblyFileName);
    public sealed virtual object CreateNavigationSession(string source);
    public sealed virtual void GetNavigationData(object navigationSession, string className, string methodName, Int32& minLineNumber, String& fileName);
    [NullableContextAttribute("2")]
public sealed virtual void DisposeNavigationSession(object navigationSession);
    public sealed virtual string GetFullFilePath(string assemblyFileName);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.IAdapterTraceLogger {
    public abstract virtual void LogError(string format, Object[] args);
    public abstract virtual void LogWarning(string format, Object[] args);
    public abstract virtual void LogInfo(string format, Object[] args);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.IFileOperations {
    public abstract virtual Assembly LoadAssembly(string assemblyName, bool isReflectionOnly);
    public abstract virtual string GetAssemblyPath(Assembly assembly);
    public abstract virtual bool DoesFileExist(string assemblyFileName);
    public abstract virtual object CreateNavigationSession(string source);
    public abstract virtual void GetNavigationData(object navigationSession, string className, string methodName, Int32& minLineNumber, String& fileName);
    [NullableContextAttribute("2")]
public abstract virtual void DisposeNavigationSession(object navigationSession);
    public abstract virtual string GetFullFilePath(string assemblyFileName);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.IReflectionOperations {
    public abstract virtual Object[] GetCustomAttributes(MemberInfo memberInfo, bool inherit);
    public abstract virtual Object[] GetCustomAttributes(MemberInfo memberInfo, Type type, bool inherit);
    public abstract virtual Object[] GetCustomAttributes(Assembly assembly, Type type);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ISettingsProvider {
    public abstract virtual void Load(XmlReader reader);
    public abstract virtual IDictionary`2<string, object> GetProperties(string source);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext {
    public TestContext Context { get; }
    public abstract virtual TestContext get_Context();
    public abstract virtual bool TryGetPropertyValue(string propertyName, Object& propertyValue);
    public abstract virtual void AddProperty(string propertyName, string propertyValue);
    public abstract virtual void SetOutcome(UnitTestOutcome outcome);
    [NullableContextAttribute("2")]
public abstract virtual void SetDataRow(object dataRow);
    [NullableContextAttribute("2")]
public abstract virtual void SetDataConnection(object dbConnection);
    public abstract virtual IList`1<string> GetResultFiles();
    [NullableContextAttribute("2")]
public abstract virtual string GetDiagnosticMessages();
    public abstract virtual void ClearDiagnosticMessages();
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestDataSource {
    public abstract virtual IEnumerable`1<object> GetData(ITestMethod testMethodInfo, ITestContext testContext);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestDeployment {
    public abstract virtual bool Deploy(IEnumerable`1<TestCase> testCases, IRunContext runContext, IFrameworkHandle frameworkHandle);
    public abstract virtual KeyValuePair`2[] GetDeploymentItems(MethodInfo method, Type type, ICollection`1<string> warnings);
    public abstract virtual void Cleanup();
    [NullableContextAttribute("2")]
public abstract virtual string GetDeploymentDirectory();
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestSource {
    public IEnumerable`1<string> ValidSourceExtensions { get; }
    public abstract virtual IEnumerable`1<string> get_ValidSourceExtensions();
    public abstract virtual bool IsAssemblyReferenced(AssemblyName assemblyName, string source);
    public abstract virtual IEnumerable`1<string> GetTestSources(IEnumerable`1<string> sources);
}
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestSourceHost {
    public abstract virtual void SetupHost();
    [NullableContextAttribute("2")]
public abstract virtual object CreateInstanceForType(Type type, Object[] args);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.IThreadOperations {
    public abstract virtual bool Execute(Action action, int timeout, CancellationToken cancelToken);
}
[NullableContextAttribute("2")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITraceListener {
    public abstract virtual TextWriter GetWriter();
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITraceListenerManager {
    public abstract virtual void Add(ITraceListener traceListener);
    public abstract virtual void Remove(ITraceListener traceListener);
    public abstract virtual void Dispose(ITraceListener traceListener);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ObjectModel.ITestMethod {
    public string Name { get; }
    public string FullClassName { get; }
    [NullableAttribute("2")]
public string DeclaringClassFullName { get; }
    public string AssemblyName { get; }
    public bool IsAsync { get; }
    [NullableAttribute("2")]
public string ManagedTypeName { get; }
    [NullableAttribute("2")]
public string ManagedMethodName { get; }
    public TestIdGenerationStrategy TestIdGenerationStrategy { get; }
    public bool HasManagedMethodAndTypeProperties { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyCollection`1<string> Hierarchy { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_FullClassName();
    [NullableContextAttribute("2")]
public abstract virtual string get_DeclaringClassFullName();
    public abstract virtual string get_AssemblyName();
    public abstract virtual bool get_IsAsync();
    [NullableContextAttribute("2")]
public abstract virtual string get_ManagedTypeName();
    [NullableContextAttribute("2")]
public abstract virtual string get_ManagedMethodName();
    public abstract virtual TestIdGenerationStrategy get_TestIdGenerationStrategy();
    public abstract virtual bool get_HasManagedMethodAndTypeProperties();
    public abstract virtual IReadOnlyCollection`1<string> get_Hierarchy();
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.MSTestSettingsProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual void Load(XmlReader reader);
    [NullableContextAttribute("1")]
public sealed virtual IDictionary`2<string, object> GetProperties(string source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ReflectionOperations : object {
    public sealed virtual Object[] GetCustomAttributes(MemberInfo memberInfo, bool inherit);
    public sealed virtual Object[] GetCustomAttributes(MemberInfo memberInfo, Type type, bool inherit);
    public sealed virtual Object[] GetCustomAttributes(Assembly assembly, Type type);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Resource : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CannotFindFile { get; }
    internal static string Common_CannotBeNullOrEmpty { get; }
    internal static string DeploymentErrorBadDeploymentItem { get; }
    internal static string DeploymentErrorFailedToAccesOutputDirectory { get; }
    internal static string DeploymentErrorFailedToAccessFile { get; }
    internal static string DeploymentErrorFailedToCopyWithOverwrite { get; }
    internal static string DeploymentErrorFailedToDeployDependencies { get; }
    internal static string DeploymentErrorFailedToGetFileForDeploymentItem { get; }
    internal static string DeploymentErrorGettingSatellite { get; }
    internal static string DeploymentItem { get; }
    internal static string DeploymentItemContainsInvalidCharacters { get; }
    internal static string DeploymentItemOutputDirectoryCannotBeNull { get; }
    internal static string DeploymentItemOutputDirectoryMustBeRelative { get; }
    internal static string DeploymentItemPathCannotBeNullOrEmpty { get; }
    internal static string DeploymentItemWithOutputDirectory { get; }
    internal static string InvalidSettingsXmlElement { get; }
    internal static string MissingDeploymentDependency { get; }
    internal static string MissingDeploymentDependencyWithoutReason { get; }
    internal static string TestRunName { get; }
    internal static string UTA_DataSourceConfigurationSectionMissing { get; }
    internal static string UTA_ErrorDataConnectionFailed { get; }
    internal static string WrongNumberOfObjects { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CannotFindFile();
    internal static string get_Common_CannotBeNullOrEmpty();
    internal static string get_DeploymentErrorBadDeploymentItem();
    internal static string get_DeploymentErrorFailedToAccesOutputDirectory();
    internal static string get_DeploymentErrorFailedToAccessFile();
    internal static string get_DeploymentErrorFailedToCopyWithOverwrite();
    internal static string get_DeploymentErrorFailedToDeployDependencies();
    internal static string get_DeploymentErrorFailedToGetFileForDeploymentItem();
    internal static string get_DeploymentErrorGettingSatellite();
    internal static string get_DeploymentItem();
    internal static string get_DeploymentItemContainsInvalidCharacters();
    internal static string get_DeploymentItemOutputDirectoryCannotBeNull();
    internal static string get_DeploymentItemOutputDirectoryMustBeRelative();
    internal static string get_DeploymentItemPathCannotBeNullOrEmpty();
    internal static string get_DeploymentItemWithOutputDirectory();
    internal static string get_InvalidSettingsXmlElement();
    internal static string get_MissingDeploymentDependency();
    internal static string get_MissingDeploymentDependencyWithoutReason();
    internal static string get_TestRunName();
    internal static string get_UTA_DataSourceConfigurationSectionMissing();
    internal static string get_UTA_ErrorDataConnectionFailed();
    internal static string get_WrongNumberOfObjects();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestContextImplementation : TestContext {
    private ThreadSafeStringWriter _threadSafeStringWriter;
    private ITestMethod _testMethod;
    private bool _stringWriterDisposed;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<string, object> _properties;
    private UnitTestOutcome _outcome;
    public UnitTestOutcome CurrentTestOutcome { get; }
    public IDictionary Properties { get; }
    public TestContext Context { get; }
    public TestContextImplementation(ITestMethod testMethod, StringWriter stringWriter, IDictionary`2<string, object> properties);
    public virtual UnitTestOutcome get_CurrentTestOutcome();
    public virtual IDictionary get_Properties();
    public sealed virtual TestContext get_Context();
    public virtual void AddResultFile(string fileName);
    [NullableContextAttribute("2")]
public virtual void Write(string message);
    public virtual void Write(string format, Object[] args);
    [NullableContextAttribute("2")]
public virtual void WriteLine(string message);
    public virtual void WriteLine(string format, Object[] args);
    public sealed virtual void SetOutcome(UnitTestOutcome outcome);
    [NullableContextAttribute("2")]
public sealed virtual void SetDataRow(object dataRow);
    [NullableContextAttribute("2")]
public sealed virtual void SetDataConnection(object dbConnection);
    public sealed virtual bool TryGetPropertyValue(string propertyName, Object& propertyValue);
    public sealed virtual void AddProperty(string propertyName, string propertyValue);
    public sealed virtual IList`1<string> GetResultFiles();
    [NullableContextAttribute("2")]
public sealed virtual string GetDiagnosticMessages();
    public sealed virtual void ClearDiagnosticMessages();
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestDataSource : object {
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerable`1<object> Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestDataSource.GetData(ITestMethod testMethodInfo, ITestContext testContext);
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestDeployment : object {
    [NullableContextAttribute("1")]
public sealed virtual KeyValuePair`2[] GetDeploymentItems(MethodInfo method, Type type, ICollection`1<string> warnings);
    public sealed virtual void Cleanup();
    [NullableContextAttribute("2")]
public sealed virtual string GetDeploymentDirectory();
    [NullableContextAttribute("1")]
public sealed virtual bool Deploy(IEnumerable`1<TestCase> tests, IRunContext runContext, IFrameworkHandle frameworkHandle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestSource : object {
    private static string SystemAssembliesPrefix;
    private static IEnumerable`1<string> ExecutableExtensions;
    private static HashSet`1<string> SystemAssemblies;
    private static HashSet`1<string> PlatformAssemblies;
    public IEnumerable`1<string> ValidSourceExtensions { get; }
    private static TestSource();
    public sealed virtual IEnumerable`1<string> get_ValidSourceExtensions();
    public sealed virtual bool IsAssemblyReferenced(AssemblyName assemblyName, string source);
    public sealed virtual IEnumerable`1<string> GetTestSources(IEnumerable`1<string> sources);
    private static bool ContainsAppxSource(IEnumerable`1<string> sources);
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestSourceHost : object {
    [NullableContextAttribute("2")]
public TestSourceHost(string sourceFileName, IRunSettings runSettings, IFrameworkHandle frameworkHandle);
    public sealed virtual void SetupHost();
    [NullableContextAttribute("2")]
public sealed virtual object CreateInstanceForType(Type type, Object[] args);
    public sealed virtual void Dispose();
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ThreadOperations : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Execute(Action action, int timeout, CancellationToken cancelToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ThreadSafeStringWriter : StringWriter {
    private static AsyncLocal`1<Dictionary`2<string, ThreadSafeStringBuilder>> State;
    private static object StaticLockObject;
    private string _outputType;
    public ThreadSafeStringWriter(IFormatProvider formatProvider, string outputType);
    private static ThreadSafeStringWriter();
    public virtual StringBuilder GetStringBuilder();
    public virtual string ToString();
    [NullableContextAttribute("2")]
public string ToStringAndClear();
    public virtual void Write(char value);
    [NullableContextAttribute("2")]
public virtual void Write(string value);
    [NullableContextAttribute("2")]
public virtual void WriteLine(string value);
    public virtual void Write(Char[] buffer, int index, int count);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("2")]
private ThreadSafeStringBuilder GetStringBuilderOrNull();
    private ThreadSafeStringBuilder GetOrAddStringBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TraceListenerManager : object {
    public TraceListenerManager(TextWriter outputWriter, TextWriter errorWriter);
    public sealed virtual void Add(ITraceListener traceListener);
    public sealed virtual void Remove(ITraceListener traceListener);
    public sealed virtual void Dispose(ITraceListener traceListener);
    public void Close(ITraceListener traceListener);
}
public class Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TraceListenerWrapper : object {
    [NullableContextAttribute("1")]
public TraceListenerWrapper(TextWriter textWriter);
    public sealed virtual void Dispose();
    public void Close();
    [NullableContextAttribute("2")]
public sealed virtual TextWriter GetWriter();
}
[ComVisibleAttribute("True")]
public abstract class System.MarshalByRefObject : object {
    [NullableContextAttribute("1")]
[SecurityCriticalAttribute]
public abstract virtual object InitializeLifetimeService();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("4124")]
[ComVisibleAttribute("True")]
public class System.SerializableAttribute : Attribute {
}
