[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.Runtime.CompilerServices.Unsafe : object {
    public static T& AddByteOffset(T& source, IntPtr byteOffset);
    [NullableContextAttribute("0")]
public static Void* Add(Void* source, int elementOffset);
    public static T& Add(T& source, int elementOffset);
    public static T& Add(T& source, IntPtr elementOffset);
    public static bool AreSame(T& left, T& right);
    [NullableContextAttribute("0")]
public static Void* AsPointer(T& value);
    [NullableContextAttribute("0")]
public static T& AsRef(Void* source);
    public static T& AsRef(T& source);
    [NullableContextAttribute("2")]
public static T As(object o);
    public static TTo& As(TFrom& source);
    public static IntPtr ByteOffset(T& origin, T& target);
    public static void CopyBlock(Byte& destination, Byte& source, UInt32 byteCount);
    [NullableContextAttribute("0")]
public static void CopyBlock(Void* destination, Void* source, UInt32 byteCount);
    public static void CopyBlockUnaligned(Byte& destination, Byte& source, UInt32 byteCount);
    [NullableContextAttribute("0")]
public static void CopyBlockUnaligned(Void* destination, Void* source, UInt32 byteCount);
    [NullableContextAttribute("0")]
public static void Copy(Void* destination, T& source);
    [NullableContextAttribute("0")]
public static void Copy(T& destination, Void* source);
    public static void InitBlock(Byte& startAddress, byte value, UInt32 byteCount);
    [NullableContextAttribute("0")]
public static void InitBlock(Void* startAddress, byte value, UInt32 byteCount);
    public static void InitBlockUnaligned(Byte& startAddress, byte value, UInt32 byteCount);
    [NullableContextAttribute("0")]
public static void InitBlockUnaligned(Void* startAddress, byte value, UInt32 byteCount);
    public static bool IsAddressGreaterThan(T& left, T& right);
    public static bool IsAddressLessThan(T& left, T& right);
    public static bool IsNullRef(T& source);
    public static T& NullRef();
    public static T ReadUnaligned(Byte& source);
    [NullableContextAttribute("0")]
public static T ReadUnaligned(Void* source);
    [NullableContextAttribute("0")]
public static T Read(Void* source);
    public static void SkipInit(T& value);
    [NullableContextAttribute("2")]
public static int SizeOf();
    public static T& SubtractByteOffset(T& source, IntPtr byteOffset);
    [NullableContextAttribute("0")]
public static Void* Subtract(Void* source, int elementOffset);
    public static T& Subtract(T& source, int elementOffset);
    public static T& Subtract(T& source, IntPtr elementOffset);
    [NullableContextAttribute("0")]
public static T& Unbox(object box);
    public static void WriteUnaligned(Byte& destination, T value);
    [NullableContextAttribute("0")]
public static void WriteUnaligned(Void* destination, T value);
    [NullableContextAttribute("0")]
public static void Write(Void* destination, T value);
}
