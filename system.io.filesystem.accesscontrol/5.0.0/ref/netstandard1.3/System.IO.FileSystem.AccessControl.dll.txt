[ExtensionAttribute]
[SecurityCriticalAttribute]
public static class System.IO.FileSystemAclExtensions : object {
    [ExtensionAttribute]
public static DirectorySecurity GetAccessControl(DirectoryInfo directoryInfo);
    [ExtensionAttribute]
public static DirectorySecurity GetAccessControl(DirectoryInfo directoryInfo, AccessControlSections includeSections);
    [ExtensionAttribute]
public static FileSecurity GetAccessControl(FileInfo fileInfo);
    [ExtensionAttribute]
public static FileSecurity GetAccessControl(FileInfo fileInfo, AccessControlSections includeSections);
    [ExtensionAttribute]
public static FileSecurity GetAccessControl(FileStream fileStream);
    [ExtensionAttribute]
public static void SetAccessControl(DirectoryInfo directoryInfo, DirectorySecurity directorySecurity);
    [ExtensionAttribute]
public static void SetAccessControl(FileInfo fileInfo, FileSecurity fileSecurity);
    [ExtensionAttribute]
public static void SetAccessControl(FileStream fileStream, FileSecurity fileSecurity);
}
[SecurityCriticalAttribute]
public abstract class System.Security.AccessControl.DirectoryObjectSecurity : ObjectSecurity {
    protected DirectoryObjectSecurity(CommonSecurityDescriptor securityDescriptor);
    public virtual AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectType, Guid inheritedObjectType);
    protected void AddAccessRule(ObjectAccessRule rule);
    protected void AddAuditRule(ObjectAuditRule rule);
    public virtual AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectType, Guid inheritedObjectType);
    public AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType);
    public AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType);
    protected virtual bool ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean& modified);
    protected virtual bool ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean& modified);
    protected bool RemoveAccessRule(ObjectAccessRule rule);
    protected void RemoveAccessRuleAll(ObjectAccessRule rule);
    protected void RemoveAccessRuleSpecific(ObjectAccessRule rule);
    protected bool RemoveAuditRule(ObjectAuditRule rule);
    protected void RemoveAuditRuleAll(ObjectAuditRule rule);
    protected void RemoveAuditRuleSpecific(ObjectAuditRule rule);
    protected void ResetAccessRule(ObjectAccessRule rule);
    protected void SetAccessRule(ObjectAccessRule rule);
    protected void SetAuditRule(ObjectAuditRule rule);
}
[SecurityCriticalAttribute]
public class System.Security.AccessControl.DirectorySecurity : FileSystemSecurity {
    public DirectorySecurity(string name, AccessControlSections includeSections);
}
[SecurityCriticalAttribute]
public class System.Security.AccessControl.FileSecurity : FileSystemSecurity {
    public FileSecurity(string fileName, AccessControlSections includeSections);
}
[SecurityCriticalAttribute]
public class System.Security.AccessControl.FileSystemAccessRule : AccessRule {
    public FileSystemRights FileSystemRights { get; }
    public FileSystemAccessRule(IdentityReference identity, FileSystemRights fileSystemRights, AccessControlType type);
    public FileSystemAccessRule(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type);
    public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, AccessControlType type);
    public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type);
    public FileSystemRights get_FileSystemRights();
}
[SecurityCriticalAttribute]
public class System.Security.AccessControl.FileSystemAuditRule : AuditRule {
    public FileSystemRights FileSystemRights { get; }
    public FileSystemAuditRule(IdentityReference identity, FileSystemRights fileSystemRights, AuditFlags flags);
    public FileSystemAuditRule(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags);
    public FileSystemAuditRule(string identity, FileSystemRights fileSystemRights, AuditFlags flags);
    public FileSystemAuditRule(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags);
    public FileSystemRights get_FileSystemRights();
}
[FlagsAttribute]
[SecurityCriticalAttribute]
public enum System.Security.AccessControl.FileSystemRights : Enum {
    public int value__;
    public static FileSystemRights AppendData;
    public static FileSystemRights ChangePermissions;
    public static FileSystemRights CreateDirectories;
    public static FileSystemRights CreateFiles;
    public static FileSystemRights Delete;
    public static FileSystemRights DeleteSubdirectoriesAndFiles;
    public static FileSystemRights ExecuteFile;
    public static FileSystemRights FullControl;
    public static FileSystemRights ListDirectory;
    public static FileSystemRights Modify;
    public static FileSystemRights Read;
    public static FileSystemRights ReadAndExecute;
    public static FileSystemRights ReadAttributes;
    public static FileSystemRights ReadData;
    public static FileSystemRights ReadExtendedAttributes;
    public static FileSystemRights ReadPermissions;
    public static FileSystemRights Synchronize;
    public static FileSystemRights TakeOwnership;
    public static FileSystemRights Traverse;
    public static FileSystemRights Write;
    public static FileSystemRights WriteAttributes;
    public static FileSystemRights WriteData;
    public static FileSystemRights WriteExtendedAttributes;
}
[SecurityCriticalAttribute]
public abstract class System.Security.AccessControl.FileSystemSecurity : NativeObjectSecurity {
    public Type AccessRightType { get; }
    public Type AccessRuleType { get; }
    public Type AuditRuleType { get; }
    public virtual Type get_AccessRightType();
    public virtual Type get_AccessRuleType();
    public virtual Type get_AuditRuleType();
    public sealed virtual AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type);
    public void AddAccessRule(FileSystemAccessRule rule);
    public void AddAuditRule(FileSystemAuditRule rule);
    public sealed virtual AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags);
    public bool RemoveAccessRule(FileSystemAccessRule rule);
    public void RemoveAccessRuleAll(FileSystemAccessRule rule);
    public void RemoveAccessRuleSpecific(FileSystemAccessRule rule);
    public bool RemoveAuditRule(FileSystemAuditRule rule);
    public void RemoveAuditRuleAll(FileSystemAuditRule rule);
    public void RemoveAuditRuleSpecific(FileSystemAuditRule rule);
    public void ResetAccessRule(FileSystemAccessRule rule);
    public void SetAccessRule(FileSystemAccessRule rule);
    public void SetAuditRule(FileSystemAuditRule rule);
}
